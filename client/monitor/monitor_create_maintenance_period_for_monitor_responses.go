// Code generated by go-swagger; DO NOT EDIT.

package monitor

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/damoun/uptrends/models"
)

// MonitorCreateMaintenancePeriodForMonitorReader is a Reader for the MonitorCreateMaintenancePeriodForMonitor structure.
type MonitorCreateMaintenancePeriodForMonitorReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *MonitorCreateMaintenancePeriodForMonitorReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewMonitorCreateMaintenancePeriodForMonitorCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewMonitorCreateMaintenancePeriodForMonitorBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewMonitorCreateMaintenancePeriodForMonitorNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewMonitorCreateMaintenancePeriodForMonitorCreated creates a MonitorCreateMaintenancePeriodForMonitorCreated with default headers values
func NewMonitorCreateMaintenancePeriodForMonitorCreated() *MonitorCreateMaintenancePeriodForMonitorCreated {
	return &MonitorCreateMaintenancePeriodForMonitorCreated{}
}

/*MonitorCreateMaintenancePeriodForMonitorCreated handles this case with default header values.

Request completed successfully. No content is returned.
*/
type MonitorCreateMaintenancePeriodForMonitorCreated struct {
	Payload *models.MaintenancePeriod
}

func (o *MonitorCreateMaintenancePeriodForMonitorCreated) Error() string {
	return fmt.Sprintf("[POST /Monitor/{monitorGuid}/MaintenancePeriod][%d] monitorCreateMaintenancePeriodForMonitorCreated  %+v", 201, o.Payload)
}

func (o *MonitorCreateMaintenancePeriodForMonitorCreated) GetPayload() *models.MaintenancePeriod {
	return o.Payload
}

func (o *MonitorCreateMaintenancePeriodForMonitorCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.MaintenancePeriod)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewMonitorCreateMaintenancePeriodForMonitorBadRequest creates a MonitorCreateMaintenancePeriodForMonitorBadRequest with default headers values
func NewMonitorCreateMaintenancePeriodForMonitorBadRequest() *MonitorCreateMaintenancePeriodForMonitorBadRequest {
	return &MonitorCreateMaintenancePeriodForMonitorBadRequest{}
}

/*MonitorCreateMaintenancePeriodForMonitorBadRequest handles this case with default header values.

The request failed.
*/
type MonitorCreateMaintenancePeriodForMonitorBadRequest struct {
	Payload *models.APIMessageInfo
}

func (o *MonitorCreateMaintenancePeriodForMonitorBadRequest) Error() string {
	return fmt.Sprintf("[POST /Monitor/{monitorGuid}/MaintenancePeriod][%d] monitorCreateMaintenancePeriodForMonitorBadRequest  %+v", 400, o.Payload)
}

func (o *MonitorCreateMaintenancePeriodForMonitorBadRequest) GetPayload() *models.APIMessageInfo {
	return o.Payload
}

func (o *MonitorCreateMaintenancePeriodForMonitorBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIMessageInfo)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewMonitorCreateMaintenancePeriodForMonitorNotFound creates a MonitorCreateMaintenancePeriodForMonitorNotFound with default headers values
func NewMonitorCreateMaintenancePeriodForMonitorNotFound() *MonitorCreateMaintenancePeriodForMonitorNotFound {
	return &MonitorCreateMaintenancePeriodForMonitorNotFound{}
}

/*MonitorCreateMaintenancePeriodForMonitorNotFound handles this case with default header values.

The specified monitor does not exist.
*/
type MonitorCreateMaintenancePeriodForMonitorNotFound struct {
	Payload *models.APIMessageInfo
}

func (o *MonitorCreateMaintenancePeriodForMonitorNotFound) Error() string {
	return fmt.Sprintf("[POST /Monitor/{monitorGuid}/MaintenancePeriod][%d] monitorCreateMaintenancePeriodForMonitorNotFound  %+v", 404, o.Payload)
}

func (o *MonitorCreateMaintenancePeriodForMonitorNotFound) GetPayload() *models.APIMessageInfo {
	return o.Payload
}

func (o *MonitorCreateMaintenancePeriodForMonitorNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIMessageInfo)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
