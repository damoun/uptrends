// Code generated by go-swagger; DO NOT EDIT.

package monitor

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/damoun/uptrends/models"
)

// MonitorDeleteMaintenancePeriodFromMonitorReader is a Reader for the MonitorDeleteMaintenancePeriodFromMonitor structure.
type MonitorDeleteMaintenancePeriodFromMonitorReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *MonitorDeleteMaintenancePeriodFromMonitorReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewMonitorDeleteMaintenancePeriodFromMonitorNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewMonitorDeleteMaintenancePeriodFromMonitorBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewMonitorDeleteMaintenancePeriodFromMonitorNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewMonitorDeleteMaintenancePeriodFromMonitorNoContent creates a MonitorDeleteMaintenancePeriodFromMonitorNoContent with default headers values
func NewMonitorDeleteMaintenancePeriodFromMonitorNoContent() *MonitorDeleteMaintenancePeriodFromMonitorNoContent {
	return &MonitorDeleteMaintenancePeriodFromMonitorNoContent{}
}

/*MonitorDeleteMaintenancePeriodFromMonitorNoContent handles this case with default header values.

The maintenance period has been removed. No content is returned.
*/
type MonitorDeleteMaintenancePeriodFromMonitorNoContent struct {
}

func (o *MonitorDeleteMaintenancePeriodFromMonitorNoContent) Error() string {
	return fmt.Sprintf("[DELETE /Monitor/{monitorGuid}/MaintenancePeriod/{maintenancePeriodId}][%d] monitorDeleteMaintenancePeriodFromMonitorNoContent ", 204)
}

func (o *MonitorDeleteMaintenancePeriodFromMonitorNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewMonitorDeleteMaintenancePeriodFromMonitorBadRequest creates a MonitorDeleteMaintenancePeriodFromMonitorBadRequest with default headers values
func NewMonitorDeleteMaintenancePeriodFromMonitorBadRequest() *MonitorDeleteMaintenancePeriodFromMonitorBadRequest {
	return &MonitorDeleteMaintenancePeriodFromMonitorBadRequest{}
}

/*MonitorDeleteMaintenancePeriodFromMonitorBadRequest handles this case with default header values.

The request failed.
*/
type MonitorDeleteMaintenancePeriodFromMonitorBadRequest struct {
	Payload *models.APIMessageInfo
}

func (o *MonitorDeleteMaintenancePeriodFromMonitorBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /Monitor/{monitorGuid}/MaintenancePeriod/{maintenancePeriodId}][%d] monitorDeleteMaintenancePeriodFromMonitorBadRequest  %+v", 400, o.Payload)
}

func (o *MonitorDeleteMaintenancePeriodFromMonitorBadRequest) GetPayload() *models.APIMessageInfo {
	return o.Payload
}

func (o *MonitorDeleteMaintenancePeriodFromMonitorBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIMessageInfo)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewMonitorDeleteMaintenancePeriodFromMonitorNotFound creates a MonitorDeleteMaintenancePeriodFromMonitorNotFound with default headers values
func NewMonitorDeleteMaintenancePeriodFromMonitorNotFound() *MonitorDeleteMaintenancePeriodFromMonitorNotFound {
	return &MonitorDeleteMaintenancePeriodFromMonitorNotFound{}
}

/*MonitorDeleteMaintenancePeriodFromMonitorNotFound handles this case with default header values.

The specified monitor or maintenance period does not exist.
*/
type MonitorDeleteMaintenancePeriodFromMonitorNotFound struct {
	Payload *models.APIMessageInfo
}

func (o *MonitorDeleteMaintenancePeriodFromMonitorNotFound) Error() string {
	return fmt.Sprintf("[DELETE /Monitor/{monitorGuid}/MaintenancePeriod/{maintenancePeriodId}][%d] monitorDeleteMaintenancePeriodFromMonitorNotFound  %+v", 404, o.Payload)
}

func (o *MonitorDeleteMaintenancePeriodFromMonitorNotFound) GetPayload() *models.APIMessageInfo {
	return o.Payload
}

func (o *MonitorDeleteMaintenancePeriodFromMonitorNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIMessageInfo)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
