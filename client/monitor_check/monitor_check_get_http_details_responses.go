// Code generated by go-swagger; DO NOT EDIT.

package monitor_check

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/damoun/uptrends/models"
)

// MonitorCheckGetHTTPDetailsReader is a Reader for the MonitorCheckGetHTTPDetails structure.
type MonitorCheckGetHTTPDetailsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *MonitorCheckGetHTTPDetailsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewMonitorCheckGetHTTPDetailsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewMonitorCheckGetHTTPDetailsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewMonitorCheckGetHTTPDetailsOK creates a MonitorCheckGetHTTPDetailsOK with default headers values
func NewMonitorCheckGetHTTPDetailsOK() *MonitorCheckGetHTTPDetailsOK {
	return &MonitorCheckGetHTTPDetailsOK{}
}

/*MonitorCheckGetHTTPDetailsOK handles this case with default header values.

MonitorCheckGetHTTPDetailsOK monitor check get Http details o k
*/
type MonitorCheckGetHTTPDetailsOK struct {
	Payload *models.HTTPDetailsResponse
}

func (o *MonitorCheckGetHTTPDetailsOK) Error() string {
	return fmt.Sprintf("[GET /MonitorCheck/{monitorCheckId}/Http][%d] monitorCheckGetHttpDetailsOK  %+v", 200, o.Payload)
}

func (o *MonitorCheckGetHTTPDetailsOK) GetPayload() *models.HTTPDetailsResponse {
	return o.Payload
}

func (o *MonitorCheckGetHTTPDetailsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPDetailsResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewMonitorCheckGetHTTPDetailsBadRequest creates a MonitorCheckGetHTTPDetailsBadRequest with default headers values
func NewMonitorCheckGetHTTPDetailsBadRequest() *MonitorCheckGetHTTPDetailsBadRequest {
	return &MonitorCheckGetHTTPDetailsBadRequest{}
}

/*MonitorCheckGetHTTPDetailsBadRequest handles this case with default header values.

The request failed.
*/
type MonitorCheckGetHTTPDetailsBadRequest struct {
	Payload *models.APIMessageInfo
}

func (o *MonitorCheckGetHTTPDetailsBadRequest) Error() string {
	return fmt.Sprintf("[GET /MonitorCheck/{monitorCheckId}/Http][%d] monitorCheckGetHttpDetailsBadRequest  %+v", 400, o.Payload)
}

func (o *MonitorCheckGetHTTPDetailsBadRequest) GetPayload() *models.APIMessageInfo {
	return o.Payload
}

func (o *MonitorCheckGetHTTPDetailsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIMessageInfo)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
