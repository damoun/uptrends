// Code generated by go-swagger; DO NOT EDIT.

package monitor_group

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/damoun/uptrends/models"
)

// MonitorGroupStartAllMonitorAlertsInGroupReader is a Reader for the MonitorGroupStartAllMonitorAlertsInGroup structure.
type MonitorGroupStartAllMonitorAlertsInGroupReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *MonitorGroupStartAllMonitorAlertsInGroupReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewMonitorGroupStartAllMonitorAlertsInGroupNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewMonitorGroupStartAllMonitorAlertsInGroupBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewMonitorGroupStartAllMonitorAlertsInGroupNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewMonitorGroupStartAllMonitorAlertsInGroupNoContent creates a MonitorGroupStartAllMonitorAlertsInGroupNoContent with default headers values
func NewMonitorGroupStartAllMonitorAlertsInGroupNoContent() *MonitorGroupStartAllMonitorAlertsInGroupNoContent {
	return &MonitorGroupStartAllMonitorAlertsInGroupNoContent{}
}

/*MonitorGroupStartAllMonitorAlertsInGroupNoContent handles this case with default header values.

Alerting for all monitors in the group has been started.
*/
type MonitorGroupStartAllMonitorAlertsInGroupNoContent struct {
}

func (o *MonitorGroupStartAllMonitorAlertsInGroupNoContent) Error() string {
	return fmt.Sprintf("[POST /MonitorGroup/{monitorGroupGuid}/StartAllMonitorAlerts][%d] monitorGroupStartAllMonitorAlertsInGroupNoContent ", 204)
}

func (o *MonitorGroupStartAllMonitorAlertsInGroupNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewMonitorGroupStartAllMonitorAlertsInGroupBadRequest creates a MonitorGroupStartAllMonitorAlertsInGroupBadRequest with default headers values
func NewMonitorGroupStartAllMonitorAlertsInGroupBadRequest() *MonitorGroupStartAllMonitorAlertsInGroupBadRequest {
	return &MonitorGroupStartAllMonitorAlertsInGroupBadRequest{}
}

/*MonitorGroupStartAllMonitorAlertsInGroupBadRequest handles this case with default header values.

The request failed.
*/
type MonitorGroupStartAllMonitorAlertsInGroupBadRequest struct {
	Payload *models.APIMessageInfo
}

func (o *MonitorGroupStartAllMonitorAlertsInGroupBadRequest) Error() string {
	return fmt.Sprintf("[POST /MonitorGroup/{monitorGroupGuid}/StartAllMonitorAlerts][%d] monitorGroupStartAllMonitorAlertsInGroupBadRequest  %+v", 400, o.Payload)
}

func (o *MonitorGroupStartAllMonitorAlertsInGroupBadRequest) GetPayload() *models.APIMessageInfo {
	return o.Payload
}

func (o *MonitorGroupStartAllMonitorAlertsInGroupBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIMessageInfo)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewMonitorGroupStartAllMonitorAlertsInGroupNotFound creates a MonitorGroupStartAllMonitorAlertsInGroupNotFound with default headers values
func NewMonitorGroupStartAllMonitorAlertsInGroupNotFound() *MonitorGroupStartAllMonitorAlertsInGroupNotFound {
	return &MonitorGroupStartAllMonitorAlertsInGroupNotFound{}
}

/*MonitorGroupStartAllMonitorAlertsInGroupNotFound handles this case with default header values.

The requested monitor group was not found.
*/
type MonitorGroupStartAllMonitorAlertsInGroupNotFound struct {
	Payload *models.APIMessageInfo
}

func (o *MonitorGroupStartAllMonitorAlertsInGroupNotFound) Error() string {
	return fmt.Sprintf("[POST /MonitorGroup/{monitorGroupGuid}/StartAllMonitorAlerts][%d] monitorGroupStartAllMonitorAlertsInGroupNotFound  %+v", 404, o.Payload)
}

func (o *MonitorGroupStartAllMonitorAlertsInGroupNotFound) GetPayload() *models.APIMessageInfo {
	return o.Payload
}

func (o *MonitorGroupStartAllMonitorAlertsInGroupNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIMessageInfo)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
