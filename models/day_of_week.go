// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// DayOfWeek day of week
// swagger:model DayOfWeek
type DayOfWeek string

const (

	// DayOfWeekSunday captures enum value "Sunday"
	DayOfWeekSunday DayOfWeek = "Sunday"

	// DayOfWeekMonday captures enum value "Monday"
	DayOfWeekMonday DayOfWeek = "Monday"

	// DayOfWeekTuesday captures enum value "Tuesday"
	DayOfWeekTuesday DayOfWeek = "Tuesday"

	// DayOfWeekWednesday captures enum value "Wednesday"
	DayOfWeekWednesday DayOfWeek = "Wednesday"

	// DayOfWeekThursday captures enum value "Thursday"
	DayOfWeekThursday DayOfWeek = "Thursday"

	// DayOfWeekFriday captures enum value "Friday"
	DayOfWeekFriday DayOfWeek = "Friday"

	// DayOfWeekSaturday captures enum value "Saturday"
	DayOfWeekSaturday DayOfWeek = "Saturday"
)

// for schema
var dayOfWeekEnum []interface{}

func init() {
	var res []DayOfWeek
	if err := json.Unmarshal([]byte(`["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		dayOfWeekEnum = append(dayOfWeekEnum, v)
	}
}

func (m DayOfWeek) validateDayOfWeekEnum(path, location string, value DayOfWeek) error {
	if err := validate.Enum(path, location, value, dayOfWeekEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this day of week
func (m DayOfWeek) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateDayOfWeekEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
