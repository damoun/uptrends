// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// ErrorLevel error level
// swagger:model ErrorLevel
type ErrorLevel string

const (

	// ErrorLevelNoError captures enum value "NoError"
	ErrorLevelNoError ErrorLevel = "NoError"

	// ErrorLevelUnconfirmed captures enum value "Unconfirmed"
	ErrorLevelUnconfirmed ErrorLevel = "Unconfirmed"

	// ErrorLevelConfirmed captures enum value "Confirmed"
	ErrorLevelConfirmed ErrorLevel = "Confirmed"
)

// for schema
var errorLevelEnum []interface{}

func init() {
	var res []ErrorLevel
	if err := json.Unmarshal([]byte(`["NoError","Unconfirmed","Confirmed"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		errorLevelEnum = append(errorLevelEnum, v)
	}
}

func (m ErrorLevel) validateErrorLevelEnum(path, location string, value ErrorLevel) error {
	if err := validate.Enum(path, location, value, errorLevelEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this error level
func (m ErrorLevel) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateErrorLevelEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
