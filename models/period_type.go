// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// PeriodType period type
// swagger:model PeriodType
type PeriodType string

const (

	// PeriodTypeCurrentDay captures enum value "CurrentDay"
	PeriodTypeCurrentDay PeriodType = "CurrentDay"

	// PeriodTypeCurrentWeek captures enum value "CurrentWeek"
	PeriodTypeCurrentWeek PeriodType = "CurrentWeek"

	// PeriodTypeCurrentMonth captures enum value "CurrentMonth"
	PeriodTypeCurrentMonth PeriodType = "CurrentMonth"

	// PeriodTypePreviousDay captures enum value "PreviousDay"
	PeriodTypePreviousDay PeriodType = "PreviousDay"

	// PeriodTypePreviousWeek captures enum value "PreviousWeek"
	PeriodTypePreviousWeek PeriodType = "PreviousWeek"

	// PeriodTypePreviousMonth captures enum value "PreviousMonth"
	PeriodTypePreviousMonth PeriodType = "PreviousMonth"

	// PeriodTypeLast24Hours captures enum value "Last24Hours"
	PeriodTypeLast24Hours PeriodType = "Last24Hours"

	// PeriodTypeLast48Hours captures enum value "Last48Hours"
	PeriodTypeLast48Hours PeriodType = "Last48Hours"

	// PeriodTypeLast7Days captures enum value "Last7Days"
	PeriodTypeLast7Days PeriodType = "Last7Days"

	// PeriodTypeLast30Days captures enum value "Last30Days"
	PeriodTypeLast30Days PeriodType = "Last30Days"

	// PeriodTypeLast60Days captures enum value "Last60Days"
	PeriodTypeLast60Days PeriodType = "Last60Days"

	// PeriodTypeLast90Days captures enum value "Last90Days"
	PeriodTypeLast90Days PeriodType = "Last90Days"
)

// for schema
var periodTypeEnum []interface{}

func init() {
	var res []PeriodType
	if err := json.Unmarshal([]byte(`["CurrentDay","CurrentWeek","CurrentMonth","PreviousDay","PreviousWeek","PreviousMonth","Last24Hours","Last48Hours","Last7Days","Last30Days","Last60Days","Last90Days"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		periodTypeEnum = append(periodTypeEnum, v)
	}
}

func (m PeriodType) validatePeriodTypeEnum(path, location string, value PeriodType) error {
	if err := validate.Enum(path, location, value, periodTypeEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this period type
func (m PeriodType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validatePeriodTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
