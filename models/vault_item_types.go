// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// VaultItemTypes vault item types
// swagger:model VaultItemTypes
type VaultItemTypes string

const (

	// VaultItemTypesCredentialSet captures enum value "CredentialSet"
	VaultItemTypesCredentialSet VaultItemTypes = "CredentialSet"

	// VaultItemTypesCertificate captures enum value "Certificate"
	VaultItemTypesCertificate VaultItemTypes = "Certificate"

	// VaultItemTypesText captures enum value "Text"
	VaultItemTypesText VaultItemTypes = "Text"

	// VaultItemTypesCertificateArchive captures enum value "CertificateArchive"
	VaultItemTypesCertificateArchive VaultItemTypes = "CertificateArchive"
)

// for schema
var vaultItemTypesEnum []interface{}

func init() {
	var res []VaultItemTypes
	if err := json.Unmarshal([]byte(`["CredentialSet","Certificate","Text","CertificateArchive"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		vaultItemTypesEnum = append(vaultItemTypesEnum, v)
	}
}

func (m VaultItemTypes) validateVaultItemTypesEnum(path, location string, value VaultItemTypes) error {
	if err := validate.Enum(path, location, value, vaultItemTypesEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this vault item types
func (m VaultItemTypes) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateVaultItemTypesEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
