// Code generated by go-swagger; DO NOT EDIT.

package alert

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/damoun/uptrends/v4/models"
)

// AlertGetMonitorGroupAlertsReader is a Reader for the AlertGetMonitorGroupAlerts structure.
type AlertGetMonitorGroupAlertsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AlertGetMonitorGroupAlertsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAlertGetMonitorGroupAlertsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewAlertGetMonitorGroupAlertsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewAlertGetMonitorGroupAlertsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewAlertGetMonitorGroupAlertsOK creates a AlertGetMonitorGroupAlertsOK with default headers values
func NewAlertGetMonitorGroupAlertsOK() *AlertGetMonitorGroupAlertsOK {
	return &AlertGetMonitorGroupAlertsOK{}
}

/*AlertGetMonitorGroupAlertsOK handles this case with default header values.

The request completed successfully.
*/
type AlertGetMonitorGroupAlertsOK struct {
	Payload *models.AlertResponse
}

func (o *AlertGetMonitorGroupAlertsOK) Error() string {
	return fmt.Sprintf("[GET /Alert/MonitorGroup/{monitorGroupGuid}][%d] alertGetMonitorGroupAlertsOK  %+v", 200, o.Payload)
}

func (o *AlertGetMonitorGroupAlertsOK) GetPayload() *models.AlertResponse {
	return o.Payload
}

func (o *AlertGetMonitorGroupAlertsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AlertResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAlertGetMonitorGroupAlertsBadRequest creates a AlertGetMonitorGroupAlertsBadRequest with default headers values
func NewAlertGetMonitorGroupAlertsBadRequest() *AlertGetMonitorGroupAlertsBadRequest {
	return &AlertGetMonitorGroupAlertsBadRequest{}
}

/*AlertGetMonitorGroupAlertsBadRequest handles this case with default header values.

The request failed.
*/
type AlertGetMonitorGroupAlertsBadRequest struct {
	Payload *models.MessageList
}

func (o *AlertGetMonitorGroupAlertsBadRequest) Error() string {
	return fmt.Sprintf("[GET /Alert/MonitorGroup/{monitorGroupGuid}][%d] alertGetMonitorGroupAlertsBadRequest  %+v", 400, o.Payload)
}

func (o *AlertGetMonitorGroupAlertsBadRequest) GetPayload() *models.MessageList {
	return o.Payload
}

func (o *AlertGetMonitorGroupAlertsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.MessageList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAlertGetMonitorGroupAlertsNotFound creates a AlertGetMonitorGroupAlertsNotFound with default headers values
func NewAlertGetMonitorGroupAlertsNotFound() *AlertGetMonitorGroupAlertsNotFound {
	return &AlertGetMonitorGroupAlertsNotFound{}
}

/*AlertGetMonitorGroupAlertsNotFound handles this case with default header values.

The specified Monitor Group for monitorGroupGuid does not exist.
*/
type AlertGetMonitorGroupAlertsNotFound struct {
	Payload *models.MessageList
}

func (o *AlertGetMonitorGroupAlertsNotFound) Error() string {
	return fmt.Sprintf("[GET /Alert/MonitorGroup/{monitorGroupGuid}][%d] alertGetMonitorGroupAlertsNotFound  %+v", 404, o.Payload)
}

func (o *AlertGetMonitorGroupAlertsNotFound) GetPayload() *models.MessageList {
	return o.Payload
}

func (o *AlertGetMonitorGroupAlertsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.MessageList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
