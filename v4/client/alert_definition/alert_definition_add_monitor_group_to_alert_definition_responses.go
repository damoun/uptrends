// Code generated by go-swagger; DO NOT EDIT.

package alert_definition

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/damoun/uptrends/v4/models"
)

// AlertDefinitionAddMonitorGroupToAlertDefinitionReader is a Reader for the AlertDefinitionAddMonitorGroupToAlertDefinition structure.
type AlertDefinitionAddMonitorGroupToAlertDefinitionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AlertDefinitionAddMonitorGroupToAlertDefinitionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewAlertDefinitionAddMonitorGroupToAlertDefinitionCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewAlertDefinitionAddMonitorGroupToAlertDefinitionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewAlertDefinitionAddMonitorGroupToAlertDefinitionForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewAlertDefinitionAddMonitorGroupToAlertDefinitionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewAlertDefinitionAddMonitorGroupToAlertDefinitionCreated creates a AlertDefinitionAddMonitorGroupToAlertDefinitionCreated with default headers values
func NewAlertDefinitionAddMonitorGroupToAlertDefinitionCreated() *AlertDefinitionAddMonitorGroupToAlertDefinitionCreated {
	return &AlertDefinitionAddMonitorGroupToAlertDefinitionCreated{}
}

/*AlertDefinitionAddMonitorGroupToAlertDefinitionCreated handles this case with default header values.

The request completed successfully.
*/
type AlertDefinitionAddMonitorGroupToAlertDefinitionCreated struct {
	Payload *models.AlertDefinitionMonitorGroup
}

func (o *AlertDefinitionAddMonitorGroupToAlertDefinitionCreated) Error() string {
	return fmt.Sprintf("[POST /AlertDefinition/{alertDefinitionGuid}/Members/MonitorGroup/{monitorGroupGuid}][%d] alertDefinitionAddMonitorGroupToAlertDefinitionCreated  %+v", 201, o.Payload)
}

func (o *AlertDefinitionAddMonitorGroupToAlertDefinitionCreated) GetPayload() *models.AlertDefinitionMonitorGroup {
	return o.Payload
}

func (o *AlertDefinitionAddMonitorGroupToAlertDefinitionCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AlertDefinitionMonitorGroup)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAlertDefinitionAddMonitorGroupToAlertDefinitionBadRequest creates a AlertDefinitionAddMonitorGroupToAlertDefinitionBadRequest with default headers values
func NewAlertDefinitionAddMonitorGroupToAlertDefinitionBadRequest() *AlertDefinitionAddMonitorGroupToAlertDefinitionBadRequest {
	return &AlertDefinitionAddMonitorGroupToAlertDefinitionBadRequest{}
}

/*AlertDefinitionAddMonitorGroupToAlertDefinitionBadRequest handles this case with default header values.

The request failed.
*/
type AlertDefinitionAddMonitorGroupToAlertDefinitionBadRequest struct {
	Payload *models.MessageList
}

func (o *AlertDefinitionAddMonitorGroupToAlertDefinitionBadRequest) Error() string {
	return fmt.Sprintf("[POST /AlertDefinition/{alertDefinitionGuid}/Members/MonitorGroup/{monitorGroupGuid}][%d] alertDefinitionAddMonitorGroupToAlertDefinitionBadRequest  %+v", 400, o.Payload)
}

func (o *AlertDefinitionAddMonitorGroupToAlertDefinitionBadRequest) GetPayload() *models.MessageList {
	return o.Payload
}

func (o *AlertDefinitionAddMonitorGroupToAlertDefinitionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.MessageList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAlertDefinitionAddMonitorGroupToAlertDefinitionForbidden creates a AlertDefinitionAddMonitorGroupToAlertDefinitionForbidden with default headers values
func NewAlertDefinitionAddMonitorGroupToAlertDefinitionForbidden() *AlertDefinitionAddMonitorGroupToAlertDefinitionForbidden {
	return &AlertDefinitionAddMonitorGroupToAlertDefinitionForbidden{}
}

/*AlertDefinitionAddMonitorGroupToAlertDefinitionForbidden handles this case with default header values.

One or more validation errors occurred.
*/
type AlertDefinitionAddMonitorGroupToAlertDefinitionForbidden struct {
	Payload *models.MessageList
}

func (o *AlertDefinitionAddMonitorGroupToAlertDefinitionForbidden) Error() string {
	return fmt.Sprintf("[POST /AlertDefinition/{alertDefinitionGuid}/Members/MonitorGroup/{monitorGroupGuid}][%d] alertDefinitionAddMonitorGroupToAlertDefinitionForbidden  %+v", 403, o.Payload)
}

func (o *AlertDefinitionAddMonitorGroupToAlertDefinitionForbidden) GetPayload() *models.MessageList {
	return o.Payload
}

func (o *AlertDefinitionAddMonitorGroupToAlertDefinitionForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.MessageList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAlertDefinitionAddMonitorGroupToAlertDefinitionNotFound creates a AlertDefinitionAddMonitorGroupToAlertDefinitionNotFound with default headers values
func NewAlertDefinitionAddMonitorGroupToAlertDefinitionNotFound() *AlertDefinitionAddMonitorGroupToAlertDefinitionNotFound {
	return &AlertDefinitionAddMonitorGroupToAlertDefinitionNotFound{}
}

/*AlertDefinitionAddMonitorGroupToAlertDefinitionNotFound handles this case with default header values.

One or more of the specified entities could not be found.
*/
type AlertDefinitionAddMonitorGroupToAlertDefinitionNotFound struct {
	Payload *models.MessageList
}

func (o *AlertDefinitionAddMonitorGroupToAlertDefinitionNotFound) Error() string {
	return fmt.Sprintf("[POST /AlertDefinition/{alertDefinitionGuid}/Members/MonitorGroup/{monitorGroupGuid}][%d] alertDefinitionAddMonitorGroupToAlertDefinitionNotFound  %+v", 404, o.Payload)
}

func (o *AlertDefinitionAddMonitorGroupToAlertDefinitionNotFound) GetPayload() *models.MessageList {
	return o.Payload
}

func (o *AlertDefinitionAddMonitorGroupToAlertDefinitionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.MessageList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
