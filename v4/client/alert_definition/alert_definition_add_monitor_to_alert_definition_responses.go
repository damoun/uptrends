// Code generated by go-swagger; DO NOT EDIT.

package alert_definition

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/damoun/uptrends/v4/models"
)

// AlertDefinitionAddMonitorToAlertDefinitionReader is a Reader for the AlertDefinitionAddMonitorToAlertDefinition structure.
type AlertDefinitionAddMonitorToAlertDefinitionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AlertDefinitionAddMonitorToAlertDefinitionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewAlertDefinitionAddMonitorToAlertDefinitionCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewAlertDefinitionAddMonitorToAlertDefinitionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewAlertDefinitionAddMonitorToAlertDefinitionForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewAlertDefinitionAddMonitorToAlertDefinitionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewAlertDefinitionAddMonitorToAlertDefinitionCreated creates a AlertDefinitionAddMonitorToAlertDefinitionCreated with default headers values
func NewAlertDefinitionAddMonitorToAlertDefinitionCreated() *AlertDefinitionAddMonitorToAlertDefinitionCreated {
	return &AlertDefinitionAddMonitorToAlertDefinitionCreated{}
}

/*AlertDefinitionAddMonitorToAlertDefinitionCreated handles this case with default header values.

The request completed successfully.
*/
type AlertDefinitionAddMonitorToAlertDefinitionCreated struct {
	Payload *models.AlertDefinitionMonitor
}

func (o *AlertDefinitionAddMonitorToAlertDefinitionCreated) Error() string {
	return fmt.Sprintf("[POST /AlertDefinition/{alertDefinitionGuid}/Members/Monitor/{monitorGuid}][%d] alertDefinitionAddMonitorToAlertDefinitionCreated  %+v", 201, o.Payload)
}

func (o *AlertDefinitionAddMonitorToAlertDefinitionCreated) GetPayload() *models.AlertDefinitionMonitor {
	return o.Payload
}

func (o *AlertDefinitionAddMonitorToAlertDefinitionCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AlertDefinitionMonitor)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAlertDefinitionAddMonitorToAlertDefinitionBadRequest creates a AlertDefinitionAddMonitorToAlertDefinitionBadRequest with default headers values
func NewAlertDefinitionAddMonitorToAlertDefinitionBadRequest() *AlertDefinitionAddMonitorToAlertDefinitionBadRequest {
	return &AlertDefinitionAddMonitorToAlertDefinitionBadRequest{}
}

/*AlertDefinitionAddMonitorToAlertDefinitionBadRequest handles this case with default header values.

The request failed.
*/
type AlertDefinitionAddMonitorToAlertDefinitionBadRequest struct {
	Payload *models.MessageList
}

func (o *AlertDefinitionAddMonitorToAlertDefinitionBadRequest) Error() string {
	return fmt.Sprintf("[POST /AlertDefinition/{alertDefinitionGuid}/Members/Monitor/{monitorGuid}][%d] alertDefinitionAddMonitorToAlertDefinitionBadRequest  %+v", 400, o.Payload)
}

func (o *AlertDefinitionAddMonitorToAlertDefinitionBadRequest) GetPayload() *models.MessageList {
	return o.Payload
}

func (o *AlertDefinitionAddMonitorToAlertDefinitionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.MessageList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAlertDefinitionAddMonitorToAlertDefinitionForbidden creates a AlertDefinitionAddMonitorToAlertDefinitionForbidden with default headers values
func NewAlertDefinitionAddMonitorToAlertDefinitionForbidden() *AlertDefinitionAddMonitorToAlertDefinitionForbidden {
	return &AlertDefinitionAddMonitorToAlertDefinitionForbidden{}
}

/*AlertDefinitionAddMonitorToAlertDefinitionForbidden handles this case with default header values.

One or more validation errors occurred.
*/
type AlertDefinitionAddMonitorToAlertDefinitionForbidden struct {
	Payload *models.MessageList
}

func (o *AlertDefinitionAddMonitorToAlertDefinitionForbidden) Error() string {
	return fmt.Sprintf("[POST /AlertDefinition/{alertDefinitionGuid}/Members/Monitor/{monitorGuid}][%d] alertDefinitionAddMonitorToAlertDefinitionForbidden  %+v", 403, o.Payload)
}

func (o *AlertDefinitionAddMonitorToAlertDefinitionForbidden) GetPayload() *models.MessageList {
	return o.Payload
}

func (o *AlertDefinitionAddMonitorToAlertDefinitionForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.MessageList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAlertDefinitionAddMonitorToAlertDefinitionNotFound creates a AlertDefinitionAddMonitorToAlertDefinitionNotFound with default headers values
func NewAlertDefinitionAddMonitorToAlertDefinitionNotFound() *AlertDefinitionAddMonitorToAlertDefinitionNotFound {
	return &AlertDefinitionAddMonitorToAlertDefinitionNotFound{}
}

/*AlertDefinitionAddMonitorToAlertDefinitionNotFound handles this case with default header values.

One or more of the specified entities could not be found.
*/
type AlertDefinitionAddMonitorToAlertDefinitionNotFound struct {
	Payload *models.MessageList
}

func (o *AlertDefinitionAddMonitorToAlertDefinitionNotFound) Error() string {
	return fmt.Sprintf("[POST /AlertDefinition/{alertDefinitionGuid}/Members/Monitor/{monitorGuid}][%d] alertDefinitionAddMonitorToAlertDefinitionNotFound  %+v", 404, o.Payload)
}

func (o *AlertDefinitionAddMonitorToAlertDefinitionNotFound) GetPayload() *models.MessageList {
	return o.Payload
}

func (o *AlertDefinitionAddMonitorToAlertDefinitionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.MessageList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
