// Code generated by go-swagger; DO NOT EDIT.

package alert_definition

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/damoun/uptrends/v4/models"
)

// AlertDefinitionGetAllAlertDefinitionsReader is a Reader for the AlertDefinitionGetAllAlertDefinitions structure.
type AlertDefinitionGetAllAlertDefinitionsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AlertDefinitionGetAllAlertDefinitionsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAlertDefinitionGetAllAlertDefinitionsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewAlertDefinitionGetAllAlertDefinitionsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewAlertDefinitionGetAllAlertDefinitionsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewAlertDefinitionGetAllAlertDefinitionsOK creates a AlertDefinitionGetAllAlertDefinitionsOK with default headers values
func NewAlertDefinitionGetAllAlertDefinitionsOK() *AlertDefinitionGetAllAlertDefinitionsOK {
	return &AlertDefinitionGetAllAlertDefinitionsOK{}
}

/*AlertDefinitionGetAllAlertDefinitionsOK handles this case with default header values.

The request completed successfully.
*/
type AlertDefinitionGetAllAlertDefinitionsOK struct {
	Payload []*models.AlertDefinition
}

func (o *AlertDefinitionGetAllAlertDefinitionsOK) Error() string {
	return fmt.Sprintf("[GET /AlertDefinition][%d] alertDefinitionGetAllAlertDefinitionsOK  %+v", 200, o.Payload)
}

func (o *AlertDefinitionGetAllAlertDefinitionsOK) GetPayload() []*models.AlertDefinition {
	return o.Payload
}

func (o *AlertDefinitionGetAllAlertDefinitionsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAlertDefinitionGetAllAlertDefinitionsBadRequest creates a AlertDefinitionGetAllAlertDefinitionsBadRequest with default headers values
func NewAlertDefinitionGetAllAlertDefinitionsBadRequest() *AlertDefinitionGetAllAlertDefinitionsBadRequest {
	return &AlertDefinitionGetAllAlertDefinitionsBadRequest{}
}

/*AlertDefinitionGetAllAlertDefinitionsBadRequest handles this case with default header values.

The request failed.
*/
type AlertDefinitionGetAllAlertDefinitionsBadRequest struct {
	Payload *models.MessageList
}

func (o *AlertDefinitionGetAllAlertDefinitionsBadRequest) Error() string {
	return fmt.Sprintf("[GET /AlertDefinition][%d] alertDefinitionGetAllAlertDefinitionsBadRequest  %+v", 400, o.Payload)
}

func (o *AlertDefinitionGetAllAlertDefinitionsBadRequest) GetPayload() *models.MessageList {
	return o.Payload
}

func (o *AlertDefinitionGetAllAlertDefinitionsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.MessageList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAlertDefinitionGetAllAlertDefinitionsForbidden creates a AlertDefinitionGetAllAlertDefinitionsForbidden with default headers values
func NewAlertDefinitionGetAllAlertDefinitionsForbidden() *AlertDefinitionGetAllAlertDefinitionsForbidden {
	return &AlertDefinitionGetAllAlertDefinitionsForbidden{}
}

/*AlertDefinitionGetAllAlertDefinitionsForbidden handles this case with default header values.

One or more validation errors occurred.
*/
type AlertDefinitionGetAllAlertDefinitionsForbidden struct {
	Payload *models.MessageList
}

func (o *AlertDefinitionGetAllAlertDefinitionsForbidden) Error() string {
	return fmt.Sprintf("[GET /AlertDefinition][%d] alertDefinitionGetAllAlertDefinitionsForbidden  %+v", 403, o.Payload)
}

func (o *AlertDefinitionGetAllAlertDefinitionsForbidden) GetPayload() *models.MessageList {
	return o.Payload
}

func (o *AlertDefinitionGetAllAlertDefinitionsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.MessageList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
