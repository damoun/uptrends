// Code generated by go-swagger; DO NOT EDIT.

package alert_definition

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/damoun/uptrends/v4/models"
)

// AlertDefinitionGetAllEscalationLevelsReader is a Reader for the AlertDefinitionGetAllEscalationLevels structure.
type AlertDefinitionGetAllEscalationLevelsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AlertDefinitionGetAllEscalationLevelsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAlertDefinitionGetAllEscalationLevelsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewAlertDefinitionGetAllEscalationLevelsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewAlertDefinitionGetAllEscalationLevelsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewAlertDefinitionGetAllEscalationLevelsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewAlertDefinitionGetAllEscalationLevelsOK creates a AlertDefinitionGetAllEscalationLevelsOK with default headers values
func NewAlertDefinitionGetAllEscalationLevelsOK() *AlertDefinitionGetAllEscalationLevelsOK {
	return &AlertDefinitionGetAllEscalationLevelsOK{}
}

/*AlertDefinitionGetAllEscalationLevelsOK handles this case with default header values.

The request completed successfully.
*/
type AlertDefinitionGetAllEscalationLevelsOK struct {
	Payload []*models.EscalationLevel
}

func (o *AlertDefinitionGetAllEscalationLevelsOK) Error() string {
	return fmt.Sprintf("[GET /AlertDefinition/{alertDefinitionGuid}/EscalationLevel][%d] alertDefinitionGetAllEscalationLevelsOK  %+v", 200, o.Payload)
}

func (o *AlertDefinitionGetAllEscalationLevelsOK) GetPayload() []*models.EscalationLevel {
	return o.Payload
}

func (o *AlertDefinitionGetAllEscalationLevelsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAlertDefinitionGetAllEscalationLevelsBadRequest creates a AlertDefinitionGetAllEscalationLevelsBadRequest with default headers values
func NewAlertDefinitionGetAllEscalationLevelsBadRequest() *AlertDefinitionGetAllEscalationLevelsBadRequest {
	return &AlertDefinitionGetAllEscalationLevelsBadRequest{}
}

/*AlertDefinitionGetAllEscalationLevelsBadRequest handles this case with default header values.

The request failed.
*/
type AlertDefinitionGetAllEscalationLevelsBadRequest struct {
	Payload *models.MessageList
}

func (o *AlertDefinitionGetAllEscalationLevelsBadRequest) Error() string {
	return fmt.Sprintf("[GET /AlertDefinition/{alertDefinitionGuid}/EscalationLevel][%d] alertDefinitionGetAllEscalationLevelsBadRequest  %+v", 400, o.Payload)
}

func (o *AlertDefinitionGetAllEscalationLevelsBadRequest) GetPayload() *models.MessageList {
	return o.Payload
}

func (o *AlertDefinitionGetAllEscalationLevelsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.MessageList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAlertDefinitionGetAllEscalationLevelsForbidden creates a AlertDefinitionGetAllEscalationLevelsForbidden with default headers values
func NewAlertDefinitionGetAllEscalationLevelsForbidden() *AlertDefinitionGetAllEscalationLevelsForbidden {
	return &AlertDefinitionGetAllEscalationLevelsForbidden{}
}

/*AlertDefinitionGetAllEscalationLevelsForbidden handles this case with default header values.

One or more validation errors occurred.
*/
type AlertDefinitionGetAllEscalationLevelsForbidden struct {
	Payload *models.MessageList
}

func (o *AlertDefinitionGetAllEscalationLevelsForbidden) Error() string {
	return fmt.Sprintf("[GET /AlertDefinition/{alertDefinitionGuid}/EscalationLevel][%d] alertDefinitionGetAllEscalationLevelsForbidden  %+v", 403, o.Payload)
}

func (o *AlertDefinitionGetAllEscalationLevelsForbidden) GetPayload() *models.MessageList {
	return o.Payload
}

func (o *AlertDefinitionGetAllEscalationLevelsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.MessageList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAlertDefinitionGetAllEscalationLevelsNotFound creates a AlertDefinitionGetAllEscalationLevelsNotFound with default headers values
func NewAlertDefinitionGetAllEscalationLevelsNotFound() *AlertDefinitionGetAllEscalationLevelsNotFound {
	return &AlertDefinitionGetAllEscalationLevelsNotFound{}
}

/*AlertDefinitionGetAllEscalationLevelsNotFound handles this case with default header values.

One or more of the specified entities could not be found.
*/
type AlertDefinitionGetAllEscalationLevelsNotFound struct {
	Payload *models.MessageList
}

func (o *AlertDefinitionGetAllEscalationLevelsNotFound) Error() string {
	return fmt.Sprintf("[GET /AlertDefinition/{alertDefinitionGuid}/EscalationLevel][%d] alertDefinitionGetAllEscalationLevelsNotFound  %+v", 404, o.Payload)
}

func (o *AlertDefinitionGetAllEscalationLevelsNotFound) GetPayload() *models.MessageList {
	return o.Payload
}

func (o *AlertDefinitionGetAllEscalationLevelsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.MessageList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
