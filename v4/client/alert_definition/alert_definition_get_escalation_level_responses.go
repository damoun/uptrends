// Code generated by go-swagger; DO NOT EDIT.

package alert_definition

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/damoun/uptrends/v4/models"
)

// AlertDefinitionGetEscalationLevelReader is a Reader for the AlertDefinitionGetEscalationLevel structure.
type AlertDefinitionGetEscalationLevelReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AlertDefinitionGetEscalationLevelReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAlertDefinitionGetEscalationLevelOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewAlertDefinitionGetEscalationLevelBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewAlertDefinitionGetEscalationLevelForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewAlertDefinitionGetEscalationLevelNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewAlertDefinitionGetEscalationLevelOK creates a AlertDefinitionGetEscalationLevelOK with default headers values
func NewAlertDefinitionGetEscalationLevelOK() *AlertDefinitionGetEscalationLevelOK {
	return &AlertDefinitionGetEscalationLevelOK{}
}

/*AlertDefinitionGetEscalationLevelOK handles this case with default header values.

The request completed successfully.
*/
type AlertDefinitionGetEscalationLevelOK struct {
	Payload *models.EscalationLevel
}

func (o *AlertDefinitionGetEscalationLevelOK) Error() string {
	return fmt.Sprintf("[GET /AlertDefinition/{alertDefinitionGuid}/EscalationLevel/{escalationLevelId}][%d] alertDefinitionGetEscalationLevelOK  %+v", 200, o.Payload)
}

func (o *AlertDefinitionGetEscalationLevelOK) GetPayload() *models.EscalationLevel {
	return o.Payload
}

func (o *AlertDefinitionGetEscalationLevelOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.EscalationLevel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAlertDefinitionGetEscalationLevelBadRequest creates a AlertDefinitionGetEscalationLevelBadRequest with default headers values
func NewAlertDefinitionGetEscalationLevelBadRequest() *AlertDefinitionGetEscalationLevelBadRequest {
	return &AlertDefinitionGetEscalationLevelBadRequest{}
}

/*AlertDefinitionGetEscalationLevelBadRequest handles this case with default header values.

The request failed.
*/
type AlertDefinitionGetEscalationLevelBadRequest struct {
	Payload *models.MessageList
}

func (o *AlertDefinitionGetEscalationLevelBadRequest) Error() string {
	return fmt.Sprintf("[GET /AlertDefinition/{alertDefinitionGuid}/EscalationLevel/{escalationLevelId}][%d] alertDefinitionGetEscalationLevelBadRequest  %+v", 400, o.Payload)
}

func (o *AlertDefinitionGetEscalationLevelBadRequest) GetPayload() *models.MessageList {
	return o.Payload
}

func (o *AlertDefinitionGetEscalationLevelBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.MessageList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAlertDefinitionGetEscalationLevelForbidden creates a AlertDefinitionGetEscalationLevelForbidden with default headers values
func NewAlertDefinitionGetEscalationLevelForbidden() *AlertDefinitionGetEscalationLevelForbidden {
	return &AlertDefinitionGetEscalationLevelForbidden{}
}

/*AlertDefinitionGetEscalationLevelForbidden handles this case with default header values.

One or more validation errors occurred.
*/
type AlertDefinitionGetEscalationLevelForbidden struct {
	Payload *models.MessageList
}

func (o *AlertDefinitionGetEscalationLevelForbidden) Error() string {
	return fmt.Sprintf("[GET /AlertDefinition/{alertDefinitionGuid}/EscalationLevel/{escalationLevelId}][%d] alertDefinitionGetEscalationLevelForbidden  %+v", 403, o.Payload)
}

func (o *AlertDefinitionGetEscalationLevelForbidden) GetPayload() *models.MessageList {
	return o.Payload
}

func (o *AlertDefinitionGetEscalationLevelForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.MessageList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAlertDefinitionGetEscalationLevelNotFound creates a AlertDefinitionGetEscalationLevelNotFound with default headers values
func NewAlertDefinitionGetEscalationLevelNotFound() *AlertDefinitionGetEscalationLevelNotFound {
	return &AlertDefinitionGetEscalationLevelNotFound{}
}

/*AlertDefinitionGetEscalationLevelNotFound handles this case with default header values.

One or more of the specified entities could not be found.
*/
type AlertDefinitionGetEscalationLevelNotFound struct {
	Payload *models.MessageList
}

func (o *AlertDefinitionGetEscalationLevelNotFound) Error() string {
	return fmt.Sprintf("[GET /AlertDefinition/{alertDefinitionGuid}/EscalationLevel/{escalationLevelId}][%d] alertDefinitionGetEscalationLevelNotFound  %+v", 404, o.Payload)
}

func (o *AlertDefinitionGetEscalationLevelNotFound) GetPayload() *models.MessageList {
	return o.Payload
}

func (o *AlertDefinitionGetEscalationLevelNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.MessageList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
