// Code generated by go-swagger; DO NOT EDIT.

package checkpoint

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/damoun/uptrends/v4/models"
)

// CheckpointRegionGetCheckpointRegionCheckpointsReader is a Reader for the CheckpointRegionGetCheckpointRegionCheckpoints structure.
type CheckpointRegionGetCheckpointRegionCheckpointsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CheckpointRegionGetCheckpointRegionCheckpointsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCheckpointRegionGetCheckpointRegionCheckpointsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCheckpointRegionGetCheckpointRegionCheckpointsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCheckpointRegionGetCheckpointRegionCheckpointsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewCheckpointRegionGetCheckpointRegionCheckpointsOK creates a CheckpointRegionGetCheckpointRegionCheckpointsOK with default headers values
func NewCheckpointRegionGetCheckpointRegionCheckpointsOK() *CheckpointRegionGetCheckpointRegionCheckpointsOK {
	return &CheckpointRegionGetCheckpointRegionCheckpointsOK{}
}

/*CheckpointRegionGetCheckpointRegionCheckpointsOK handles this case with default header values.

The request completed successfully.
*/
type CheckpointRegionGetCheckpointRegionCheckpointsOK struct {
	Payload []*models.Checkpoint
}

func (o *CheckpointRegionGetCheckpointRegionCheckpointsOK) Error() string {
	return fmt.Sprintf("[GET /CheckpointRegion/{checkpointRegionId}/Checkpoint][%d] checkpointRegionGetCheckpointRegionCheckpointsOK  %+v", 200, o.Payload)
}

func (o *CheckpointRegionGetCheckpointRegionCheckpointsOK) GetPayload() []*models.Checkpoint {
	return o.Payload
}

func (o *CheckpointRegionGetCheckpointRegionCheckpointsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCheckpointRegionGetCheckpointRegionCheckpointsBadRequest creates a CheckpointRegionGetCheckpointRegionCheckpointsBadRequest with default headers values
func NewCheckpointRegionGetCheckpointRegionCheckpointsBadRequest() *CheckpointRegionGetCheckpointRegionCheckpointsBadRequest {
	return &CheckpointRegionGetCheckpointRegionCheckpointsBadRequest{}
}

/*CheckpointRegionGetCheckpointRegionCheckpointsBadRequest handles this case with default header values.

The request failed.
*/
type CheckpointRegionGetCheckpointRegionCheckpointsBadRequest struct {
	Payload *models.MessageList
}

func (o *CheckpointRegionGetCheckpointRegionCheckpointsBadRequest) Error() string {
	return fmt.Sprintf("[GET /CheckpointRegion/{checkpointRegionId}/Checkpoint][%d] checkpointRegionGetCheckpointRegionCheckpointsBadRequest  %+v", 400, o.Payload)
}

func (o *CheckpointRegionGetCheckpointRegionCheckpointsBadRequest) GetPayload() *models.MessageList {
	return o.Payload
}

func (o *CheckpointRegionGetCheckpointRegionCheckpointsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.MessageList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCheckpointRegionGetCheckpointRegionCheckpointsNotFound creates a CheckpointRegionGetCheckpointRegionCheckpointsNotFound with default headers values
func NewCheckpointRegionGetCheckpointRegionCheckpointsNotFound() *CheckpointRegionGetCheckpointRegionCheckpointsNotFound {
	return &CheckpointRegionGetCheckpointRegionCheckpointsNotFound{}
}

/*CheckpointRegionGetCheckpointRegionCheckpointsNotFound handles this case with default header values.

The checkpoint region could not be found.
*/
type CheckpointRegionGetCheckpointRegionCheckpointsNotFound struct {
	Payload *models.MessageList
}

func (o *CheckpointRegionGetCheckpointRegionCheckpointsNotFound) Error() string {
	return fmt.Sprintf("[GET /CheckpointRegion/{checkpointRegionId}/Checkpoint][%d] checkpointRegionGetCheckpointRegionCheckpointsNotFound  %+v", 404, o.Payload)
}

func (o *CheckpointRegionGetCheckpointRegionCheckpointsNotFound) GetPayload() *models.MessageList {
	return o.Payload
}

func (o *CheckpointRegionGetCheckpointRegionCheckpointsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.MessageList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
