// Code generated by go-swagger; DO NOT EDIT.

package checkpoint

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/damoun/uptrends/v4/models"
)

// CheckpointServerGetAllServerIPV4AddressesReader is a Reader for the CheckpointServerGetAllServerIPV4Addresses structure.
type CheckpointServerGetAllServerIPV4AddressesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CheckpointServerGetAllServerIPV4AddressesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCheckpointServerGetAllServerIPV4AddressesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCheckpointServerGetAllServerIPV4AddressesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewCheckpointServerGetAllServerIPV4AddressesOK creates a CheckpointServerGetAllServerIPV4AddressesOK with default headers values
func NewCheckpointServerGetAllServerIPV4AddressesOK() *CheckpointServerGetAllServerIPV4AddressesOK {
	return &CheckpointServerGetAllServerIPV4AddressesOK{}
}

/*CheckpointServerGetAllServerIPV4AddressesOK handles this case with default header values.

The request completed successfully.
*/
type CheckpointServerGetAllServerIPV4AddressesOK struct {
	Payload *models.ListStringResponse
}

func (o *CheckpointServerGetAllServerIPV4AddressesOK) Error() string {
	return fmt.Sprintf("[GET /Checkpoint/Server/Ipv4][%d] checkpointServerGetAllServerIpv4AddressesOK  %+v", 200, o.Payload)
}

func (o *CheckpointServerGetAllServerIPV4AddressesOK) GetPayload() *models.ListStringResponse {
	return o.Payload
}

func (o *CheckpointServerGetAllServerIPV4AddressesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ListStringResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCheckpointServerGetAllServerIPV4AddressesBadRequest creates a CheckpointServerGetAllServerIPV4AddressesBadRequest with default headers values
func NewCheckpointServerGetAllServerIPV4AddressesBadRequest() *CheckpointServerGetAllServerIPV4AddressesBadRequest {
	return &CheckpointServerGetAllServerIPV4AddressesBadRequest{}
}

/*CheckpointServerGetAllServerIPV4AddressesBadRequest handles this case with default header values.

The request failed.
*/
type CheckpointServerGetAllServerIPV4AddressesBadRequest struct {
	Payload *models.MessageList
}

func (o *CheckpointServerGetAllServerIPV4AddressesBadRequest) Error() string {
	return fmt.Sprintf("[GET /Checkpoint/Server/Ipv4][%d] checkpointServerGetAllServerIpv4AddressesBadRequest  %+v", 400, o.Payload)
}

func (o *CheckpointServerGetAllServerIPV4AddressesBadRequest) GetPayload() *models.MessageList {
	return o.Payload
}

func (o *CheckpointServerGetAllServerIPV4AddressesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.MessageList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
