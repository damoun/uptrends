// Code generated by go-swagger; DO NOT EDIT.

package dashboard

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/damoun/uptrends/v4/models"
)

// DashboardCloneDashboardReader is a Reader for the DashboardCloneDashboard structure.
type DashboardCloneDashboardReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DashboardCloneDashboardReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewDashboardCloneDashboardCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDashboardCloneDashboardBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDashboardCloneDashboardNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDashboardCloneDashboardCreated creates a DashboardCloneDashboardCreated with default headers values
func NewDashboardCloneDashboardCreated() *DashboardCloneDashboardCreated {
	return &DashboardCloneDashboardCreated{}
}

/*DashboardCloneDashboardCreated handles this case with default header values.

The request completed successfully.
*/
type DashboardCloneDashboardCreated struct {
	Payload *models.Dashboard
}

func (o *DashboardCloneDashboardCreated) Error() string {
	return fmt.Sprintf("[POST /Dashboard/{dashboardGuid}/Clone][%d] dashboardCloneDashboardCreated  %+v", 201, o.Payload)
}

func (o *DashboardCloneDashboardCreated) GetPayload() *models.Dashboard {
	return o.Payload
}

func (o *DashboardCloneDashboardCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Dashboard)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDashboardCloneDashboardBadRequest creates a DashboardCloneDashboardBadRequest with default headers values
func NewDashboardCloneDashboardBadRequest() *DashboardCloneDashboardBadRequest {
	return &DashboardCloneDashboardBadRequest{}
}

/*DashboardCloneDashboardBadRequest handles this case with default header values.

The request failed.
*/
type DashboardCloneDashboardBadRequest struct {
	Payload *models.MessageList
}

func (o *DashboardCloneDashboardBadRequest) Error() string {
	return fmt.Sprintf("[POST /Dashboard/{dashboardGuid}/Clone][%d] dashboardCloneDashboardBadRequest  %+v", 400, o.Payload)
}

func (o *DashboardCloneDashboardBadRequest) GetPayload() *models.MessageList {
	return o.Payload
}

func (o *DashboardCloneDashboardBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.MessageList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDashboardCloneDashboardNotFound creates a DashboardCloneDashboardNotFound with default headers values
func NewDashboardCloneDashboardNotFound() *DashboardCloneDashboardNotFound {
	return &DashboardCloneDashboardNotFound{}
}

/*DashboardCloneDashboardNotFound handles this case with default header values.

The specified dashboard could not be found.
*/
type DashboardCloneDashboardNotFound struct {
	Payload *models.MessageList
}

func (o *DashboardCloneDashboardNotFound) Error() string {
	return fmt.Sprintf("[POST /Dashboard/{dashboardGuid}/Clone][%d] dashboardCloneDashboardNotFound  %+v", 404, o.Payload)
}

func (o *DashboardCloneDashboardNotFound) GetPayload() *models.MessageList {
	return o.Payload
}

func (o *DashboardCloneDashboardNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.MessageList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
