// Code generated by go-swagger; DO NOT EDIT.

package dashboard

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/damoun/uptrends/v4/models"
)

// DashboardPartiallyUpdateDashboardReader is a Reader for the DashboardPartiallyUpdateDashboard structure.
type DashboardPartiallyUpdateDashboardReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DashboardPartiallyUpdateDashboardReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewDashboardPartiallyUpdateDashboardNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDashboardPartiallyUpdateDashboardBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDashboardPartiallyUpdateDashboardNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDashboardPartiallyUpdateDashboardNoContent creates a DashboardPartiallyUpdateDashboardNoContent with default headers values
func NewDashboardPartiallyUpdateDashboardNoContent() *DashboardPartiallyUpdateDashboardNoContent {
	return &DashboardPartiallyUpdateDashboardNoContent{}
}

/*DashboardPartiallyUpdateDashboardNoContent handles this case with default header values.

The request completed successfully.
*/
type DashboardPartiallyUpdateDashboardNoContent struct {
}

func (o *DashboardPartiallyUpdateDashboardNoContent) Error() string {
	return fmt.Sprintf("[PATCH /Dashboard/{dashboardGuid}][%d] dashboardPartiallyUpdateDashboardNoContent ", 204)
}

func (o *DashboardPartiallyUpdateDashboardNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDashboardPartiallyUpdateDashboardBadRequest creates a DashboardPartiallyUpdateDashboardBadRequest with default headers values
func NewDashboardPartiallyUpdateDashboardBadRequest() *DashboardPartiallyUpdateDashboardBadRequest {
	return &DashboardPartiallyUpdateDashboardBadRequest{}
}

/*DashboardPartiallyUpdateDashboardBadRequest handles this case with default header values.

The request failed.
*/
type DashboardPartiallyUpdateDashboardBadRequest struct {
	Payload *models.MessageList
}

func (o *DashboardPartiallyUpdateDashboardBadRequest) Error() string {
	return fmt.Sprintf("[PATCH /Dashboard/{dashboardGuid}][%d] dashboardPartiallyUpdateDashboardBadRequest  %+v", 400, o.Payload)
}

func (o *DashboardPartiallyUpdateDashboardBadRequest) GetPayload() *models.MessageList {
	return o.Payload
}

func (o *DashboardPartiallyUpdateDashboardBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.MessageList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDashboardPartiallyUpdateDashboardNotFound creates a DashboardPartiallyUpdateDashboardNotFound with default headers values
func NewDashboardPartiallyUpdateDashboardNotFound() *DashboardPartiallyUpdateDashboardNotFound {
	return &DashboardPartiallyUpdateDashboardNotFound{}
}

/*DashboardPartiallyUpdateDashboardNotFound handles this case with default header values.

One or more of the specified entities could not be found.
*/
type DashboardPartiallyUpdateDashboardNotFound struct {
	Payload *models.MessageList
}

func (o *DashboardPartiallyUpdateDashboardNotFound) Error() string {
	return fmt.Sprintf("[PATCH /Dashboard/{dashboardGuid}][%d] dashboardPartiallyUpdateDashboardNotFound  %+v", 404, o.Payload)
}

func (o *DashboardPartiallyUpdateDashboardNotFound) GetPayload() *models.MessageList {
	return o.Payload
}

func (o *DashboardPartiallyUpdateDashboardNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.MessageList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
