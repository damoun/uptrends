// Code generated by go-swagger; DO NOT EDIT.

package monitor

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/damoun/uptrends/v4/models"
)

// MonitorCleanupMaintenancePeriodsReader is a Reader for the MonitorCleanupMaintenancePeriods structure.
type MonitorCleanupMaintenancePeriodsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *MonitorCleanupMaintenancePeriodsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewMonitorCleanupMaintenancePeriodsNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewMonitorCleanupMaintenancePeriodsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewMonitorCleanupMaintenancePeriodsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewMonitorCleanupMaintenancePeriodsNoContent creates a MonitorCleanupMaintenancePeriodsNoContent with default headers values
func NewMonitorCleanupMaintenancePeriodsNoContent() *MonitorCleanupMaintenancePeriodsNoContent {
	return &MonitorCleanupMaintenancePeriodsNoContent{}
}

/*MonitorCleanupMaintenancePeriodsNoContent handles this case with default header values.

The request completed successfully. No content is returned.
*/
type MonitorCleanupMaintenancePeriodsNoContent struct {
}

func (o *MonitorCleanupMaintenancePeriodsNoContent) Error() string {
	return fmt.Sprintf("[POST /Monitor/{monitorGuid}/MaintenancePeriod/Cleanup/{beforeDate}][%d] monitorCleanupMaintenancePeriodsNoContent ", 204)
}

func (o *MonitorCleanupMaintenancePeriodsNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewMonitorCleanupMaintenancePeriodsBadRequest creates a MonitorCleanupMaintenancePeriodsBadRequest with default headers values
func NewMonitorCleanupMaintenancePeriodsBadRequest() *MonitorCleanupMaintenancePeriodsBadRequest {
	return &MonitorCleanupMaintenancePeriodsBadRequest{}
}

/*MonitorCleanupMaintenancePeriodsBadRequest handles this case with default header values.

The request failed.
*/
type MonitorCleanupMaintenancePeriodsBadRequest struct {
	Payload *models.MessageList
}

func (o *MonitorCleanupMaintenancePeriodsBadRequest) Error() string {
	return fmt.Sprintf("[POST /Monitor/{monitorGuid}/MaintenancePeriod/Cleanup/{beforeDate}][%d] monitorCleanupMaintenancePeriodsBadRequest  %+v", 400, o.Payload)
}

func (o *MonitorCleanupMaintenancePeriodsBadRequest) GetPayload() *models.MessageList {
	return o.Payload
}

func (o *MonitorCleanupMaintenancePeriodsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.MessageList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewMonitorCleanupMaintenancePeriodsNotFound creates a MonitorCleanupMaintenancePeriodsNotFound with default headers values
func NewMonitorCleanupMaintenancePeriodsNotFound() *MonitorCleanupMaintenancePeriodsNotFound {
	return &MonitorCleanupMaintenancePeriodsNotFound{}
}

/*MonitorCleanupMaintenancePeriodsNotFound handles this case with default header values.

The specified monitor does not exist.
*/
type MonitorCleanupMaintenancePeriodsNotFound struct {
	Payload *models.MessageList
}

func (o *MonitorCleanupMaintenancePeriodsNotFound) Error() string {
	return fmt.Sprintf("[POST /Monitor/{monitorGuid}/MaintenancePeriod/Cleanup/{beforeDate}][%d] monitorCleanupMaintenancePeriodsNotFound  %+v", 404, o.Payload)
}

func (o *MonitorCleanupMaintenancePeriodsNotFound) GetPayload() *models.MessageList {
	return o.Payload
}

func (o *MonitorCleanupMaintenancePeriodsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.MessageList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
