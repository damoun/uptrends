// Code generated by go-swagger; DO NOT EDIT.

package monitor

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/damoun/uptrends/v4/models"
)

// MonitorPutMonitorReader is a Reader for the MonitorPutMonitor structure.
type MonitorPutMonitorReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *MonitorPutMonitorReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewMonitorPutMonitorNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewMonitorPutMonitorBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewMonitorPutMonitorNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewMonitorPutMonitorNoContent creates a MonitorPutMonitorNoContent with default headers values
func NewMonitorPutMonitorNoContent() *MonitorPutMonitorNoContent {
	return &MonitorPutMonitorNoContent{}
}

/*MonitorPutMonitorNoContent handles this case with default header values.

The update was successful. No content is returned.
*/
type MonitorPutMonitorNoContent struct {
}

func (o *MonitorPutMonitorNoContent) Error() string {
	return fmt.Sprintf("[PUT /Monitor/{monitorGuid}][%d] monitorPutMonitorNoContent ", 204)
}

func (o *MonitorPutMonitorNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewMonitorPutMonitorBadRequest creates a MonitorPutMonitorBadRequest with default headers values
func NewMonitorPutMonitorBadRequest() *MonitorPutMonitorBadRequest {
	return &MonitorPutMonitorBadRequest{}
}

/*MonitorPutMonitorBadRequest handles this case with default header values.

The request failed.
*/
type MonitorPutMonitorBadRequest struct {
	Payload *models.APIMessageInfo
}

func (o *MonitorPutMonitorBadRequest) Error() string {
	return fmt.Sprintf("[PUT /Monitor/{monitorGuid}][%d] monitorPutMonitorBadRequest  %+v", 400, o.Payload)
}

func (o *MonitorPutMonitorBadRequest) GetPayload() *models.APIMessageInfo {
	return o.Payload
}

func (o *MonitorPutMonitorBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIMessageInfo)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewMonitorPutMonitorNotFound creates a MonitorPutMonitorNotFound with default headers values
func NewMonitorPutMonitorNotFound() *MonitorPutMonitorNotFound {
	return &MonitorPutMonitorNotFound{}
}

/*MonitorPutMonitorNotFound handles this case with default header values.

The specified monitor does not exist.
*/
type MonitorPutMonitorNotFound struct {
	Payload *models.APIMessageInfo
}

func (o *MonitorPutMonitorNotFound) Error() string {
	return fmt.Sprintf("[PUT /Monitor/{monitorGuid}][%d] monitorPutMonitorNotFound  %+v", 404, o.Payload)
}

func (o *MonitorPutMonitorNotFound) GetPayload() *models.APIMessageInfo {
	return o.Payload
}

func (o *MonitorPutMonitorNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIMessageInfo)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
