// Code generated by go-swagger; DO NOT EDIT.

package monitor_group

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/damoun/uptrends/v4/models"
)

// MonitorGroupCreateMonitorGroupReader is a Reader for the MonitorGroupCreateMonitorGroup structure.
type MonitorGroupCreateMonitorGroupReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *MonitorGroupCreateMonitorGroupReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewMonitorGroupCreateMonitorGroupCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewMonitorGroupCreateMonitorGroupBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewMonitorGroupCreateMonitorGroupCreated creates a MonitorGroupCreateMonitorGroupCreated with default headers values
func NewMonitorGroupCreateMonitorGroupCreated() *MonitorGroupCreateMonitorGroupCreated {
	return &MonitorGroupCreateMonitorGroupCreated{}
}

/*MonitorGroupCreateMonitorGroupCreated handles this case with default header values.

The request completed successfully.
*/
type MonitorGroupCreateMonitorGroupCreated struct {
	Payload *models.MonitorGroup
}

func (o *MonitorGroupCreateMonitorGroupCreated) Error() string {
	return fmt.Sprintf("[POST /MonitorGroup][%d] monitorGroupCreateMonitorGroupCreated  %+v", 201, o.Payload)
}

func (o *MonitorGroupCreateMonitorGroupCreated) GetPayload() *models.MonitorGroup {
	return o.Payload
}

func (o *MonitorGroupCreateMonitorGroupCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.MonitorGroup)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewMonitorGroupCreateMonitorGroupBadRequest creates a MonitorGroupCreateMonitorGroupBadRequest with default headers values
func NewMonitorGroupCreateMonitorGroupBadRequest() *MonitorGroupCreateMonitorGroupBadRequest {
	return &MonitorGroupCreateMonitorGroupBadRequest{}
}

/*MonitorGroupCreateMonitorGroupBadRequest handles this case with default header values.

The request failed.
*/
type MonitorGroupCreateMonitorGroupBadRequest struct {
	Payload *models.MessageList
}

func (o *MonitorGroupCreateMonitorGroupBadRequest) Error() string {
	return fmt.Sprintf("[POST /MonitorGroup][%d] monitorGroupCreateMonitorGroupBadRequest  %+v", 400, o.Payload)
}

func (o *MonitorGroupCreateMonitorGroupBadRequest) GetPayload() *models.MessageList {
	return o.Payload
}

func (o *MonitorGroupCreateMonitorGroupBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.MessageList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
