// Code generated by go-swagger; DO NOT EDIT.

package monitor_group

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/damoun/uptrends/v4/models"
)

// MonitorGroupGetAllMonitorGroupsReader is a Reader for the MonitorGroupGetAllMonitorGroups structure.
type MonitorGroupGetAllMonitorGroupsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *MonitorGroupGetAllMonitorGroupsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewMonitorGroupGetAllMonitorGroupsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewMonitorGroupGetAllMonitorGroupsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewMonitorGroupGetAllMonitorGroupsOK creates a MonitorGroupGetAllMonitorGroupsOK with default headers values
func NewMonitorGroupGetAllMonitorGroupsOK() *MonitorGroupGetAllMonitorGroupsOK {
	return &MonitorGroupGetAllMonitorGroupsOK{}
}

/*MonitorGroupGetAllMonitorGroupsOK handles this case with default header values.

Request completed successfully.
*/
type MonitorGroupGetAllMonitorGroupsOK struct {
	Payload []*models.MonitorGroup
}

func (o *MonitorGroupGetAllMonitorGroupsOK) Error() string {
	return fmt.Sprintf("[GET /MonitorGroup][%d] monitorGroupGetAllMonitorGroupsOK  %+v", 200, o.Payload)
}

func (o *MonitorGroupGetAllMonitorGroupsOK) GetPayload() []*models.MonitorGroup {
	return o.Payload
}

func (o *MonitorGroupGetAllMonitorGroupsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewMonitorGroupGetAllMonitorGroupsBadRequest creates a MonitorGroupGetAllMonitorGroupsBadRequest with default headers values
func NewMonitorGroupGetAllMonitorGroupsBadRequest() *MonitorGroupGetAllMonitorGroupsBadRequest {
	return &MonitorGroupGetAllMonitorGroupsBadRequest{}
}

/*MonitorGroupGetAllMonitorGroupsBadRequest handles this case with default header values.

The request failed.
*/
type MonitorGroupGetAllMonitorGroupsBadRequest struct {
	Payload *models.APIMessageInfo
}

func (o *MonitorGroupGetAllMonitorGroupsBadRequest) Error() string {
	return fmt.Sprintf("[GET /MonitorGroup][%d] monitorGroupGetAllMonitorGroupsBadRequest  %+v", 400, o.Payload)
}

func (o *MonitorGroupGetAllMonitorGroupsBadRequest) GetPayload() *models.APIMessageInfo {
	return o.Payload
}

func (o *MonitorGroupGetAllMonitorGroupsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIMessageInfo)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
