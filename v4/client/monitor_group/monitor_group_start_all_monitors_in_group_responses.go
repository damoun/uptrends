// Code generated by go-swagger; DO NOT EDIT.

package monitor_group

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/damoun/uptrends/v4/models"
)

// MonitorGroupStartAllMonitorsInGroupReader is a Reader for the MonitorGroupStartAllMonitorsInGroup structure.
type MonitorGroupStartAllMonitorsInGroupReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *MonitorGroupStartAllMonitorsInGroupReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewMonitorGroupStartAllMonitorsInGroupNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewMonitorGroupStartAllMonitorsInGroupBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewMonitorGroupStartAllMonitorsInGroupNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewMonitorGroupStartAllMonitorsInGroupNoContent creates a MonitorGroupStartAllMonitorsInGroupNoContent with default headers values
func NewMonitorGroupStartAllMonitorsInGroupNoContent() *MonitorGroupStartAllMonitorsInGroupNoContent {
	return &MonitorGroupStartAllMonitorsInGroupNoContent{}
}

/*MonitorGroupStartAllMonitorsInGroupNoContent handles this case with default header values.

The request completed successfully. No content is returned.
*/
type MonitorGroupStartAllMonitorsInGroupNoContent struct {
}

func (o *MonitorGroupStartAllMonitorsInGroupNoContent) Error() string {
	return fmt.Sprintf("[POST /MonitorGroup/{monitorGroupGuid}/StartAllMonitors][%d] monitorGroupStartAllMonitorsInGroupNoContent ", 204)
}

func (o *MonitorGroupStartAllMonitorsInGroupNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewMonitorGroupStartAllMonitorsInGroupBadRequest creates a MonitorGroupStartAllMonitorsInGroupBadRequest with default headers values
func NewMonitorGroupStartAllMonitorsInGroupBadRequest() *MonitorGroupStartAllMonitorsInGroupBadRequest {
	return &MonitorGroupStartAllMonitorsInGroupBadRequest{}
}

/*MonitorGroupStartAllMonitorsInGroupBadRequest handles this case with default header values.

The request failed.
*/
type MonitorGroupStartAllMonitorsInGroupBadRequest struct {
	Payload *models.MessageList
}

func (o *MonitorGroupStartAllMonitorsInGroupBadRequest) Error() string {
	return fmt.Sprintf("[POST /MonitorGroup/{monitorGroupGuid}/StartAllMonitors][%d] monitorGroupStartAllMonitorsInGroupBadRequest  %+v", 400, o.Payload)
}

func (o *MonitorGroupStartAllMonitorsInGroupBadRequest) GetPayload() *models.MessageList {
	return o.Payload
}

func (o *MonitorGroupStartAllMonitorsInGroupBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.MessageList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewMonitorGroupStartAllMonitorsInGroupNotFound creates a MonitorGroupStartAllMonitorsInGroupNotFound with default headers values
func NewMonitorGroupStartAllMonitorsInGroupNotFound() *MonitorGroupStartAllMonitorsInGroupNotFound {
	return &MonitorGroupStartAllMonitorsInGroupNotFound{}
}

/*MonitorGroupStartAllMonitorsInGroupNotFound handles this case with default header values.

The requested monitor group was not found.
*/
type MonitorGroupStartAllMonitorsInGroupNotFound struct {
	Payload *models.MessageList
}

func (o *MonitorGroupStartAllMonitorsInGroupNotFound) Error() string {
	return fmt.Sprintf("[POST /MonitorGroup/{monitorGroupGuid}/StartAllMonitors][%d] monitorGroupStartAllMonitorsInGroupNotFound  %+v", 404, o.Payload)
}

func (o *MonitorGroupStartAllMonitorsInGroupNotFound) GetPayload() *models.MessageList {
	return o.Payload
}

func (o *MonitorGroupStartAllMonitorsInGroupNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.MessageList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
