// Code generated by go-swagger; DO NOT EDIT.

package monitor_group

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/damoun/uptrends/v4/models"
)

// MonitorGroupStopAllMonitorAlertsInGroupReader is a Reader for the MonitorGroupStopAllMonitorAlertsInGroup structure.
type MonitorGroupStopAllMonitorAlertsInGroupReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *MonitorGroupStopAllMonitorAlertsInGroupReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewMonitorGroupStopAllMonitorAlertsInGroupNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewMonitorGroupStopAllMonitorAlertsInGroupBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewMonitorGroupStopAllMonitorAlertsInGroupNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewMonitorGroupStopAllMonitorAlertsInGroupNoContent creates a MonitorGroupStopAllMonitorAlertsInGroupNoContent with default headers values
func NewMonitorGroupStopAllMonitorAlertsInGroupNoContent() *MonitorGroupStopAllMonitorAlertsInGroupNoContent {
	return &MonitorGroupStopAllMonitorAlertsInGroupNoContent{}
}

/*MonitorGroupStopAllMonitorAlertsInGroupNoContent handles this case with default header values.

Alerting for all monitors in the group has been stopped.
*/
type MonitorGroupStopAllMonitorAlertsInGroupNoContent struct {
}

func (o *MonitorGroupStopAllMonitorAlertsInGroupNoContent) Error() string {
	return fmt.Sprintf("[POST /MonitorGroup/{monitorGroupGuid}/StopAllMonitorAlerts][%d] monitorGroupStopAllMonitorAlertsInGroupNoContent ", 204)
}

func (o *MonitorGroupStopAllMonitorAlertsInGroupNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewMonitorGroupStopAllMonitorAlertsInGroupBadRequest creates a MonitorGroupStopAllMonitorAlertsInGroupBadRequest with default headers values
func NewMonitorGroupStopAllMonitorAlertsInGroupBadRequest() *MonitorGroupStopAllMonitorAlertsInGroupBadRequest {
	return &MonitorGroupStopAllMonitorAlertsInGroupBadRequest{}
}

/*MonitorGroupStopAllMonitorAlertsInGroupBadRequest handles this case with default header values.

The request failed.
*/
type MonitorGroupStopAllMonitorAlertsInGroupBadRequest struct {
	Payload *models.APIMessageInfo
}

func (o *MonitorGroupStopAllMonitorAlertsInGroupBadRequest) Error() string {
	return fmt.Sprintf("[POST /MonitorGroup/{monitorGroupGuid}/StopAllMonitorAlerts][%d] monitorGroupStopAllMonitorAlertsInGroupBadRequest  %+v", 400, o.Payload)
}

func (o *MonitorGroupStopAllMonitorAlertsInGroupBadRequest) GetPayload() *models.APIMessageInfo {
	return o.Payload
}

func (o *MonitorGroupStopAllMonitorAlertsInGroupBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIMessageInfo)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewMonitorGroupStopAllMonitorAlertsInGroupNotFound creates a MonitorGroupStopAllMonitorAlertsInGroupNotFound with default headers values
func NewMonitorGroupStopAllMonitorAlertsInGroupNotFound() *MonitorGroupStopAllMonitorAlertsInGroupNotFound {
	return &MonitorGroupStopAllMonitorAlertsInGroupNotFound{}
}

/*MonitorGroupStopAllMonitorAlertsInGroupNotFound handles this case with default header values.

The requested monitor group was not found.
*/
type MonitorGroupStopAllMonitorAlertsInGroupNotFound struct {
	Payload *models.APIMessageInfo
}

func (o *MonitorGroupStopAllMonitorAlertsInGroupNotFound) Error() string {
	return fmt.Sprintf("[POST /MonitorGroup/{monitorGroupGuid}/StopAllMonitorAlerts][%d] monitorGroupStopAllMonitorAlertsInGroupNotFound  %+v", 404, o.Payload)
}

func (o *MonitorGroupStopAllMonitorAlertsInGroupNotFound) GetPayload() *models.APIMessageInfo {
	return o.Payload
}

func (o *MonitorGroupStopAllMonitorAlertsInGroupNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIMessageInfo)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
