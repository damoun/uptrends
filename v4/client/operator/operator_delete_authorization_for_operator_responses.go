// Code generated by go-swagger; DO NOT EDIT.

package operator

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/damoun/uptrends/v4/models"
)

// OperatorDeleteAuthorizationForOperatorReader is a Reader for the OperatorDeleteAuthorizationForOperator structure.
type OperatorDeleteAuthorizationForOperatorReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *OperatorDeleteAuthorizationForOperatorReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewOperatorDeleteAuthorizationForOperatorNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewOperatorDeleteAuthorizationForOperatorBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewOperatorDeleteAuthorizationForOperatorNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewOperatorDeleteAuthorizationForOperatorNoContent creates a OperatorDeleteAuthorizationForOperatorNoContent with default headers values
func NewOperatorDeleteAuthorizationForOperatorNoContent() *OperatorDeleteAuthorizationForOperatorNoContent {
	return &OperatorDeleteAuthorizationForOperatorNoContent{}
}

/*OperatorDeleteAuthorizationForOperatorNoContent handles this case with default header values.

The request completed successfully.
*/
type OperatorDeleteAuthorizationForOperatorNoContent struct {
}

func (o *OperatorDeleteAuthorizationForOperatorNoContent) Error() string {
	return fmt.Sprintf("[DELETE /Operator/{operatorGuid}/Authorization/{authorizationType}][%d] operatorDeleteAuthorizationForOperatorNoContent ", 204)
}

func (o *OperatorDeleteAuthorizationForOperatorNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewOperatorDeleteAuthorizationForOperatorBadRequest creates a OperatorDeleteAuthorizationForOperatorBadRequest with default headers values
func NewOperatorDeleteAuthorizationForOperatorBadRequest() *OperatorDeleteAuthorizationForOperatorBadRequest {
	return &OperatorDeleteAuthorizationForOperatorBadRequest{}
}

/*OperatorDeleteAuthorizationForOperatorBadRequest handles this case with default header values.

The request failed.
*/
type OperatorDeleteAuthorizationForOperatorBadRequest struct {
	Payload *models.MessageList
}

func (o *OperatorDeleteAuthorizationForOperatorBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /Operator/{operatorGuid}/Authorization/{authorizationType}][%d] operatorDeleteAuthorizationForOperatorBadRequest  %+v", 400, o.Payload)
}

func (o *OperatorDeleteAuthorizationForOperatorBadRequest) GetPayload() *models.MessageList {
	return o.Payload
}

func (o *OperatorDeleteAuthorizationForOperatorBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.MessageList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewOperatorDeleteAuthorizationForOperatorNotFound creates a OperatorDeleteAuthorizationForOperatorNotFound with default headers values
func NewOperatorDeleteAuthorizationForOperatorNotFound() *OperatorDeleteAuthorizationForOperatorNotFound {
	return &OperatorDeleteAuthorizationForOperatorNotFound{}
}

/*OperatorDeleteAuthorizationForOperatorNotFound handles this case with default header values.

The specified operator was not found.
*/
type OperatorDeleteAuthorizationForOperatorNotFound struct {
	Payload *models.MessageList
}

func (o *OperatorDeleteAuthorizationForOperatorNotFound) Error() string {
	return fmt.Sprintf("[DELETE /Operator/{operatorGuid}/Authorization/{authorizationType}][%d] operatorDeleteAuthorizationForOperatorNotFound  %+v", 404, o.Payload)
}

func (o *OperatorDeleteAuthorizationForOperatorNotFound) GetPayload() *models.MessageList {
	return o.Payload
}

func (o *OperatorDeleteAuthorizationForOperatorNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.MessageList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
