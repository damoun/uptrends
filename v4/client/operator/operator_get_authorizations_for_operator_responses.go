// Code generated by go-swagger; DO NOT EDIT.

package operator

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/damoun/uptrends/v4/models"
)

// OperatorGetAuthorizationsForOperatorReader is a Reader for the OperatorGetAuthorizationsForOperator structure.
type OperatorGetAuthorizationsForOperatorReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *OperatorGetAuthorizationsForOperatorReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewOperatorGetAuthorizationsForOperatorOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewOperatorGetAuthorizationsForOperatorBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewOperatorGetAuthorizationsForOperatorNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewOperatorGetAuthorizationsForOperatorOK creates a OperatorGetAuthorizationsForOperatorOK with default headers values
func NewOperatorGetAuthorizationsForOperatorOK() *OperatorGetAuthorizationsForOperatorOK {
	return &OperatorGetAuthorizationsForOperatorOK{}
}

/*OperatorGetAuthorizationsForOperatorOK handles this case with default header values.

The request completed successfully.
*/
type OperatorGetAuthorizationsForOperatorOK struct {
	Payload []models.AuthorizationTypeWithoutContext
}

func (o *OperatorGetAuthorizationsForOperatorOK) Error() string {
	return fmt.Sprintf("[GET /Operator/{operatorGuid}/Authorization][%d] operatorGetAuthorizationsForOperatorOK  %+v", 200, o.Payload)
}

func (o *OperatorGetAuthorizationsForOperatorOK) GetPayload() []models.AuthorizationTypeWithoutContext {
	return o.Payload
}

func (o *OperatorGetAuthorizationsForOperatorOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewOperatorGetAuthorizationsForOperatorBadRequest creates a OperatorGetAuthorizationsForOperatorBadRequest with default headers values
func NewOperatorGetAuthorizationsForOperatorBadRequest() *OperatorGetAuthorizationsForOperatorBadRequest {
	return &OperatorGetAuthorizationsForOperatorBadRequest{}
}

/*OperatorGetAuthorizationsForOperatorBadRequest handles this case with default header values.

The request failed.
*/
type OperatorGetAuthorizationsForOperatorBadRequest struct {
	Payload *models.MessageList
}

func (o *OperatorGetAuthorizationsForOperatorBadRequest) Error() string {
	return fmt.Sprintf("[GET /Operator/{operatorGuid}/Authorization][%d] operatorGetAuthorizationsForOperatorBadRequest  %+v", 400, o.Payload)
}

func (o *OperatorGetAuthorizationsForOperatorBadRequest) GetPayload() *models.MessageList {
	return o.Payload
}

func (o *OperatorGetAuthorizationsForOperatorBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.MessageList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewOperatorGetAuthorizationsForOperatorNotFound creates a OperatorGetAuthorizationsForOperatorNotFound with default headers values
func NewOperatorGetAuthorizationsForOperatorNotFound() *OperatorGetAuthorizationsForOperatorNotFound {
	return &OperatorGetAuthorizationsForOperatorNotFound{}
}

/*OperatorGetAuthorizationsForOperatorNotFound handles this case with default header values.

The specified operator was not found.
*/
type OperatorGetAuthorizationsForOperatorNotFound struct {
	Payload *models.MessageList
}

func (o *OperatorGetAuthorizationsForOperatorNotFound) Error() string {
	return fmt.Sprintf("[GET /Operator/{operatorGuid}/Authorization][%d] operatorGetAuthorizationsForOperatorNotFound  %+v", 404, o.Payload)
}

func (o *OperatorGetAuthorizationsForOperatorNotFound) GetPayload() *models.MessageList {
	return o.Payload
}

func (o *OperatorGetAuthorizationsForOperatorNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.MessageList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
