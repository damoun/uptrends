// Code generated by go-swagger; DO NOT EDIT.

package operator

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/damoun/uptrends/v4/models"
)

// OperatorGetOperatorGroupsForOperatorReader is a Reader for the OperatorGetOperatorGroupsForOperator structure.
type OperatorGetOperatorGroupsForOperatorReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *OperatorGetOperatorGroupsForOperatorReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewOperatorGetOperatorGroupsForOperatorOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewOperatorGetOperatorGroupsForOperatorBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewOperatorGetOperatorGroupsForOperatorNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewOperatorGetOperatorGroupsForOperatorOK creates a OperatorGetOperatorGroupsForOperatorOK with default headers values
func NewOperatorGetOperatorGroupsForOperatorOK() *OperatorGetOperatorGroupsForOperatorOK {
	return &OperatorGetOperatorGroupsForOperatorOK{}
}

/*OperatorGetOperatorGroupsForOperatorOK handles this case with default header values.

The request completed successfully.
*/
type OperatorGetOperatorGroupsForOperatorOK struct {
	Payload []*models.OperatorMember
}

func (o *OperatorGetOperatorGroupsForOperatorOK) Error() string {
	return fmt.Sprintf("[GET /Operator/{operatorGuid}/OperatorGroups][%d] operatorGetOperatorGroupsForOperatorOK  %+v", 200, o.Payload)
}

func (o *OperatorGetOperatorGroupsForOperatorOK) GetPayload() []*models.OperatorMember {
	return o.Payload
}

func (o *OperatorGetOperatorGroupsForOperatorOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewOperatorGetOperatorGroupsForOperatorBadRequest creates a OperatorGetOperatorGroupsForOperatorBadRequest with default headers values
func NewOperatorGetOperatorGroupsForOperatorBadRequest() *OperatorGetOperatorGroupsForOperatorBadRequest {
	return &OperatorGetOperatorGroupsForOperatorBadRequest{}
}

/*OperatorGetOperatorGroupsForOperatorBadRequest handles this case with default header values.

The request failed.
*/
type OperatorGetOperatorGroupsForOperatorBadRequest struct {
	Payload *models.MessageList
}

func (o *OperatorGetOperatorGroupsForOperatorBadRequest) Error() string {
	return fmt.Sprintf("[GET /Operator/{operatorGuid}/OperatorGroups][%d] operatorGetOperatorGroupsForOperatorBadRequest  %+v", 400, o.Payload)
}

func (o *OperatorGetOperatorGroupsForOperatorBadRequest) GetPayload() *models.MessageList {
	return o.Payload
}

func (o *OperatorGetOperatorGroupsForOperatorBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.MessageList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewOperatorGetOperatorGroupsForOperatorNotFound creates a OperatorGetOperatorGroupsForOperatorNotFound with default headers values
func NewOperatorGetOperatorGroupsForOperatorNotFound() *OperatorGetOperatorGroupsForOperatorNotFound {
	return &OperatorGetOperatorGroupsForOperatorNotFound{}
}

/*OperatorGetOperatorGroupsForOperatorNotFound handles this case with default header values.

The specified operator was not found.
*/
type OperatorGetOperatorGroupsForOperatorNotFound struct {
	Payload *models.MessageList
}

func (o *OperatorGetOperatorGroupsForOperatorNotFound) Error() string {
	return fmt.Sprintf("[GET /Operator/{operatorGuid}/OperatorGroups][%d] operatorGetOperatorGroupsForOperatorNotFound  %+v", 404, o.Payload)
}

func (o *OperatorGetOperatorGroupsForOperatorNotFound) GetPayload() *models.MessageList {
	return o.Payload
}

func (o *OperatorGetOperatorGroupsForOperatorNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.MessageList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
