// Code generated by go-swagger; DO NOT EDIT.

package operator

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/damoun/uptrends/v4/models"
)

// OperatorPostAuthorizationForOperatorReader is a Reader for the OperatorPostAuthorizationForOperator structure.
type OperatorPostAuthorizationForOperatorReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *OperatorPostAuthorizationForOperatorReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewOperatorPostAuthorizationForOperatorNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewOperatorPostAuthorizationForOperatorBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewOperatorPostAuthorizationForOperatorNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewOperatorPostAuthorizationForOperatorNoContent creates a OperatorPostAuthorizationForOperatorNoContent with default headers values
func NewOperatorPostAuthorizationForOperatorNoContent() *OperatorPostAuthorizationForOperatorNoContent {
	return &OperatorPostAuthorizationForOperatorNoContent{}
}

/*OperatorPostAuthorizationForOperatorNoContent handles this case with default header values.

The request completed successfully.
*/
type OperatorPostAuthorizationForOperatorNoContent struct {
}

func (o *OperatorPostAuthorizationForOperatorNoContent) Error() string {
	return fmt.Sprintf("[POST /Operator/{operatorGuid}/Authorization/{authorizationType}][%d] operatorPostAuthorizationForOperatorNoContent ", 204)
}

func (o *OperatorPostAuthorizationForOperatorNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewOperatorPostAuthorizationForOperatorBadRequest creates a OperatorPostAuthorizationForOperatorBadRequest with default headers values
func NewOperatorPostAuthorizationForOperatorBadRequest() *OperatorPostAuthorizationForOperatorBadRequest {
	return &OperatorPostAuthorizationForOperatorBadRequest{}
}

/*OperatorPostAuthorizationForOperatorBadRequest handles this case with default header values.

The request failed.
*/
type OperatorPostAuthorizationForOperatorBadRequest struct {
	Payload *models.MessageList
}

func (o *OperatorPostAuthorizationForOperatorBadRequest) Error() string {
	return fmt.Sprintf("[POST /Operator/{operatorGuid}/Authorization/{authorizationType}][%d] operatorPostAuthorizationForOperatorBadRequest  %+v", 400, o.Payload)
}

func (o *OperatorPostAuthorizationForOperatorBadRequest) GetPayload() *models.MessageList {
	return o.Payload
}

func (o *OperatorPostAuthorizationForOperatorBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.MessageList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewOperatorPostAuthorizationForOperatorNotFound creates a OperatorPostAuthorizationForOperatorNotFound with default headers values
func NewOperatorPostAuthorizationForOperatorNotFound() *OperatorPostAuthorizationForOperatorNotFound {
	return &OperatorPostAuthorizationForOperatorNotFound{}
}

/*OperatorPostAuthorizationForOperatorNotFound handles this case with default header values.

The specified operator was not found.
*/
type OperatorPostAuthorizationForOperatorNotFound struct {
	Payload *models.MessageList
}

func (o *OperatorPostAuthorizationForOperatorNotFound) Error() string {
	return fmt.Sprintf("[POST /Operator/{operatorGuid}/Authorization/{authorizationType}][%d] operatorPostAuthorizationForOperatorNotFound  %+v", 404, o.Payload)
}

func (o *OperatorPostAuthorizationForOperatorNotFound) GetPayload() *models.MessageList {
	return o.Payload
}

func (o *OperatorPostAuthorizationForOperatorNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.MessageList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
