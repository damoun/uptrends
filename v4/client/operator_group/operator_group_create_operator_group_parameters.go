// Code generated by go-swagger; DO NOT EDIT.

package operator_group

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/damoun/uptrends/v4/models"
)

// NewOperatorGroupCreateOperatorGroupParams creates a new OperatorGroupCreateOperatorGroupParams object
// with the default values initialized.
func NewOperatorGroupCreateOperatorGroupParams() *OperatorGroupCreateOperatorGroupParams {
	var ()
	return &OperatorGroupCreateOperatorGroupParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewOperatorGroupCreateOperatorGroupParamsWithTimeout creates a new OperatorGroupCreateOperatorGroupParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewOperatorGroupCreateOperatorGroupParamsWithTimeout(timeout time.Duration) *OperatorGroupCreateOperatorGroupParams {
	var ()
	return &OperatorGroupCreateOperatorGroupParams{

		timeout: timeout,
	}
}

// NewOperatorGroupCreateOperatorGroupParamsWithContext creates a new OperatorGroupCreateOperatorGroupParams object
// with the default values initialized, and the ability to set a context for a request
func NewOperatorGroupCreateOperatorGroupParamsWithContext(ctx context.Context) *OperatorGroupCreateOperatorGroupParams {
	var ()
	return &OperatorGroupCreateOperatorGroupParams{

		Context: ctx,
	}
}

// NewOperatorGroupCreateOperatorGroupParamsWithHTTPClient creates a new OperatorGroupCreateOperatorGroupParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewOperatorGroupCreateOperatorGroupParamsWithHTTPClient(client *http.Client) *OperatorGroupCreateOperatorGroupParams {
	var ()
	return &OperatorGroupCreateOperatorGroupParams{
		HTTPClient: client,
	}
}

/*OperatorGroupCreateOperatorGroupParams contains all the parameters to send to the API endpoint
for the operator group create operator group operation typically these are written to a http.Request
*/
type OperatorGroupCreateOperatorGroupParams struct {

	/*OperatorGroup
	  The operatorGroup object to be created

	*/
	OperatorGroup *models.OperatorGroup

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the operator group create operator group params
func (o *OperatorGroupCreateOperatorGroupParams) WithTimeout(timeout time.Duration) *OperatorGroupCreateOperatorGroupParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the operator group create operator group params
func (o *OperatorGroupCreateOperatorGroupParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the operator group create operator group params
func (o *OperatorGroupCreateOperatorGroupParams) WithContext(ctx context.Context) *OperatorGroupCreateOperatorGroupParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the operator group create operator group params
func (o *OperatorGroupCreateOperatorGroupParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the operator group create operator group params
func (o *OperatorGroupCreateOperatorGroupParams) WithHTTPClient(client *http.Client) *OperatorGroupCreateOperatorGroupParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the operator group create operator group params
func (o *OperatorGroupCreateOperatorGroupParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithOperatorGroup adds the operatorGroup to the operator group create operator group params
func (o *OperatorGroupCreateOperatorGroupParams) WithOperatorGroup(operatorGroup *models.OperatorGroup) *OperatorGroupCreateOperatorGroupParams {
	o.SetOperatorGroup(operatorGroup)
	return o
}

// SetOperatorGroup adds the operatorGroup to the operator group create operator group params
func (o *OperatorGroupCreateOperatorGroupParams) SetOperatorGroup(operatorGroup *models.OperatorGroup) {
	o.OperatorGroup = operatorGroup
}

// WriteToRequest writes these params to a swagger request
func (o *OperatorGroupCreateOperatorGroupParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.OperatorGroup != nil {
		if err := r.SetBodyParam(o.OperatorGroup); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
