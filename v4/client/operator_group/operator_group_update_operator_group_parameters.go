// Code generated by go-swagger; DO NOT EDIT.

package operator_group

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/damoun/uptrends/v4/models"
)

// NewOperatorGroupUpdateOperatorGroupParams creates a new OperatorGroupUpdateOperatorGroupParams object
// with the default values initialized.
func NewOperatorGroupUpdateOperatorGroupParams() *OperatorGroupUpdateOperatorGroupParams {
	var ()
	return &OperatorGroupUpdateOperatorGroupParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewOperatorGroupUpdateOperatorGroupParamsWithTimeout creates a new OperatorGroupUpdateOperatorGroupParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewOperatorGroupUpdateOperatorGroupParamsWithTimeout(timeout time.Duration) *OperatorGroupUpdateOperatorGroupParams {
	var ()
	return &OperatorGroupUpdateOperatorGroupParams{

		timeout: timeout,
	}
}

// NewOperatorGroupUpdateOperatorGroupParamsWithContext creates a new OperatorGroupUpdateOperatorGroupParams object
// with the default values initialized, and the ability to set a context for a request
func NewOperatorGroupUpdateOperatorGroupParamsWithContext(ctx context.Context) *OperatorGroupUpdateOperatorGroupParams {
	var ()
	return &OperatorGroupUpdateOperatorGroupParams{

		Context: ctx,
	}
}

// NewOperatorGroupUpdateOperatorGroupParamsWithHTTPClient creates a new OperatorGroupUpdateOperatorGroupParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewOperatorGroupUpdateOperatorGroupParamsWithHTTPClient(client *http.Client) *OperatorGroupUpdateOperatorGroupParams {
	var ()
	return &OperatorGroupUpdateOperatorGroupParams{
		HTTPClient: client,
	}
}

/*OperatorGroupUpdateOperatorGroupParams contains all the parameters to send to the API endpoint
for the operator group update operator group operation typically these are written to a http.Request
*/
type OperatorGroupUpdateOperatorGroupParams struct {

	/*OperatorGroup
	  The operator group to be updated

	*/
	OperatorGroup *models.OperatorGroup
	/*OperatorGroupGUID
	  The Guid of the operator group to be updated

	*/
	OperatorGroupGUID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the operator group update operator group params
func (o *OperatorGroupUpdateOperatorGroupParams) WithTimeout(timeout time.Duration) *OperatorGroupUpdateOperatorGroupParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the operator group update operator group params
func (o *OperatorGroupUpdateOperatorGroupParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the operator group update operator group params
func (o *OperatorGroupUpdateOperatorGroupParams) WithContext(ctx context.Context) *OperatorGroupUpdateOperatorGroupParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the operator group update operator group params
func (o *OperatorGroupUpdateOperatorGroupParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the operator group update operator group params
func (o *OperatorGroupUpdateOperatorGroupParams) WithHTTPClient(client *http.Client) *OperatorGroupUpdateOperatorGroupParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the operator group update operator group params
func (o *OperatorGroupUpdateOperatorGroupParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithOperatorGroup adds the operatorGroup to the operator group update operator group params
func (o *OperatorGroupUpdateOperatorGroupParams) WithOperatorGroup(operatorGroup *models.OperatorGroup) *OperatorGroupUpdateOperatorGroupParams {
	o.SetOperatorGroup(operatorGroup)
	return o
}

// SetOperatorGroup adds the operatorGroup to the operator group update operator group params
func (o *OperatorGroupUpdateOperatorGroupParams) SetOperatorGroup(operatorGroup *models.OperatorGroup) {
	o.OperatorGroup = operatorGroup
}

// WithOperatorGroupGUID adds the operatorGroupGUID to the operator group update operator group params
func (o *OperatorGroupUpdateOperatorGroupParams) WithOperatorGroupGUID(operatorGroupGUID string) *OperatorGroupUpdateOperatorGroupParams {
	o.SetOperatorGroupGUID(operatorGroupGUID)
	return o
}

// SetOperatorGroupGUID adds the operatorGroupGuid to the operator group update operator group params
func (o *OperatorGroupUpdateOperatorGroupParams) SetOperatorGroupGUID(operatorGroupGUID string) {
	o.OperatorGroupGUID = operatorGroupGUID
}

// WriteToRequest writes these params to a swagger request
func (o *OperatorGroupUpdateOperatorGroupParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.OperatorGroup != nil {
		if err := r.SetBodyParam(o.OperatorGroup); err != nil {
			return err
		}
	}

	// path param operatorGroupGuid
	if err := r.SetPathParam("operatorGroupGuid", o.OperatorGroupGUID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
