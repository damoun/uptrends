// Code generated by go-swagger; DO NOT EDIT.

package operator_group

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/damoun/uptrends/v4/models"
)

// OperatorGroupUpdateOperatorGroupReader is a Reader for the OperatorGroupUpdateOperatorGroup structure.
type OperatorGroupUpdateOperatorGroupReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *OperatorGroupUpdateOperatorGroupReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewOperatorGroupUpdateOperatorGroupNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewOperatorGroupUpdateOperatorGroupBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewOperatorGroupUpdateOperatorGroupNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewOperatorGroupUpdateOperatorGroupNoContent creates a OperatorGroupUpdateOperatorGroupNoContent with default headers values
func NewOperatorGroupUpdateOperatorGroupNoContent() *OperatorGroupUpdateOperatorGroupNoContent {
	return &OperatorGroupUpdateOperatorGroupNoContent{}
}

/*OperatorGroupUpdateOperatorGroupNoContent handles this case with default header values.

The request completed successfully. No content is returned.
*/
type OperatorGroupUpdateOperatorGroupNoContent struct {
}

func (o *OperatorGroupUpdateOperatorGroupNoContent) Error() string {
	return fmt.Sprintf("[PUT /OperatorGroup/{operatorGroupGuid}][%d] operatorGroupUpdateOperatorGroupNoContent ", 204)
}

func (o *OperatorGroupUpdateOperatorGroupNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewOperatorGroupUpdateOperatorGroupBadRequest creates a OperatorGroupUpdateOperatorGroupBadRequest with default headers values
func NewOperatorGroupUpdateOperatorGroupBadRequest() *OperatorGroupUpdateOperatorGroupBadRequest {
	return &OperatorGroupUpdateOperatorGroupBadRequest{}
}

/*OperatorGroupUpdateOperatorGroupBadRequest handles this case with default header values.

The request failed.
or
The All operators group cannot be changed or deleted.
or
The All operators group already exists.
*/
type OperatorGroupUpdateOperatorGroupBadRequest struct {
	Payload *models.MessageList
}

func (o *OperatorGroupUpdateOperatorGroupBadRequest) Error() string {
	return fmt.Sprintf("[PUT /OperatorGroup/{operatorGroupGuid}][%d] operatorGroupUpdateOperatorGroupBadRequest  %+v", 400, o.Payload)
}

func (o *OperatorGroupUpdateOperatorGroupBadRequest) GetPayload() *models.MessageList {
	return o.Payload
}

func (o *OperatorGroupUpdateOperatorGroupBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.MessageList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewOperatorGroupUpdateOperatorGroupNotFound creates a OperatorGroupUpdateOperatorGroupNotFound with default headers values
func NewOperatorGroupUpdateOperatorGroupNotFound() *OperatorGroupUpdateOperatorGroupNotFound {
	return &OperatorGroupUpdateOperatorGroupNotFound{}
}

/*OperatorGroupUpdateOperatorGroupNotFound handles this case with default header values.

The requested operator group was not found.
*/
type OperatorGroupUpdateOperatorGroupNotFound struct {
	Payload *models.MessageList
}

func (o *OperatorGroupUpdateOperatorGroupNotFound) Error() string {
	return fmt.Sprintf("[PUT /OperatorGroup/{operatorGroupGuid}][%d] operatorGroupUpdateOperatorGroupNotFound  %+v", 404, o.Payload)
}

func (o *OperatorGroupUpdateOperatorGroupNotFound) GetPayload() *models.MessageList {
	return o.Payload
}

func (o *OperatorGroupUpdateOperatorGroupNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.MessageList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
