// Code generated by go-swagger; DO NOT EDIT.

package public_status_page

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/damoun/uptrends/v4/models"
)

// NewPublicStatusPageAddAuthorizationToPublicStatusPageParams creates a new PublicStatusPageAddAuthorizationToPublicStatusPageParams object
// with the default values initialized.
func NewPublicStatusPageAddAuthorizationToPublicStatusPageParams() *PublicStatusPageAddAuthorizationToPublicStatusPageParams {
	var ()
	return &PublicStatusPageAddAuthorizationToPublicStatusPageParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewPublicStatusPageAddAuthorizationToPublicStatusPageParamsWithTimeout creates a new PublicStatusPageAddAuthorizationToPublicStatusPageParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPublicStatusPageAddAuthorizationToPublicStatusPageParamsWithTimeout(timeout time.Duration) *PublicStatusPageAddAuthorizationToPublicStatusPageParams {
	var ()
	return &PublicStatusPageAddAuthorizationToPublicStatusPageParams{

		timeout: timeout,
	}
}

// NewPublicStatusPageAddAuthorizationToPublicStatusPageParamsWithContext creates a new PublicStatusPageAddAuthorizationToPublicStatusPageParams object
// with the default values initialized, and the ability to set a context for a request
func NewPublicStatusPageAddAuthorizationToPublicStatusPageParamsWithContext(ctx context.Context) *PublicStatusPageAddAuthorizationToPublicStatusPageParams {
	var ()
	return &PublicStatusPageAddAuthorizationToPublicStatusPageParams{

		Context: ctx,
	}
}

// NewPublicStatusPageAddAuthorizationToPublicStatusPageParamsWithHTTPClient creates a new PublicStatusPageAddAuthorizationToPublicStatusPageParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewPublicStatusPageAddAuthorizationToPublicStatusPageParamsWithHTTPClient(client *http.Client) *PublicStatusPageAddAuthorizationToPublicStatusPageParams {
	var ()
	return &PublicStatusPageAddAuthorizationToPublicStatusPageParams{
		HTTPClient: client,
	}
}

/*PublicStatusPageAddAuthorizationToPublicStatusPageParams contains all the parameters to send to the API endpoint
for the public status page add authorization to public status page operation typically these are written to a http.Request
*/
type PublicStatusPageAddAuthorizationToPublicStatusPageParams struct {

	/*Authorization
	  The complete definition of the authorization that should be created.

	*/
	Authorization *models.PSPAuthorization
	/*PublicStatusPageGUID
	  The Guid of the public status page.

	*/
	PublicStatusPageGUID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the public status page add authorization to public status page params
func (o *PublicStatusPageAddAuthorizationToPublicStatusPageParams) WithTimeout(timeout time.Duration) *PublicStatusPageAddAuthorizationToPublicStatusPageParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the public status page add authorization to public status page params
func (o *PublicStatusPageAddAuthorizationToPublicStatusPageParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the public status page add authorization to public status page params
func (o *PublicStatusPageAddAuthorizationToPublicStatusPageParams) WithContext(ctx context.Context) *PublicStatusPageAddAuthorizationToPublicStatusPageParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the public status page add authorization to public status page params
func (o *PublicStatusPageAddAuthorizationToPublicStatusPageParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the public status page add authorization to public status page params
func (o *PublicStatusPageAddAuthorizationToPublicStatusPageParams) WithHTTPClient(client *http.Client) *PublicStatusPageAddAuthorizationToPublicStatusPageParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the public status page add authorization to public status page params
func (o *PublicStatusPageAddAuthorizationToPublicStatusPageParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAuthorization adds the authorization to the public status page add authorization to public status page params
func (o *PublicStatusPageAddAuthorizationToPublicStatusPageParams) WithAuthorization(authorization *models.PSPAuthorization) *PublicStatusPageAddAuthorizationToPublicStatusPageParams {
	o.SetAuthorization(authorization)
	return o
}

// SetAuthorization adds the authorization to the public status page add authorization to public status page params
func (o *PublicStatusPageAddAuthorizationToPublicStatusPageParams) SetAuthorization(authorization *models.PSPAuthorization) {
	o.Authorization = authorization
}

// WithPublicStatusPageGUID adds the publicStatusPageGUID to the public status page add authorization to public status page params
func (o *PublicStatusPageAddAuthorizationToPublicStatusPageParams) WithPublicStatusPageGUID(publicStatusPageGUID string) *PublicStatusPageAddAuthorizationToPublicStatusPageParams {
	o.SetPublicStatusPageGUID(publicStatusPageGUID)
	return o
}

// SetPublicStatusPageGUID adds the publicStatusPageGuid to the public status page add authorization to public status page params
func (o *PublicStatusPageAddAuthorizationToPublicStatusPageParams) SetPublicStatusPageGUID(publicStatusPageGUID string) {
	o.PublicStatusPageGUID = publicStatusPageGUID
}

// WriteToRequest writes these params to a swagger request
func (o *PublicStatusPageAddAuthorizationToPublicStatusPageParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Authorization != nil {
		if err := r.SetBodyParam(o.Authorization); err != nil {
			return err
		}
	}

	// path param publicStatusPageGuid
	if err := r.SetPathParam("publicStatusPageGuid", o.PublicStatusPageGUID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
