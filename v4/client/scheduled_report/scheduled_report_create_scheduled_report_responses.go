// Code generated by go-swagger; DO NOT EDIT.

package scheduled_report

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/damoun/uptrends/v4/models"
)

// ScheduledReportCreateScheduledReportReader is a Reader for the ScheduledReportCreateScheduledReport structure.
type ScheduledReportCreateScheduledReportReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ScheduledReportCreateScheduledReportReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewScheduledReportCreateScheduledReportCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewScheduledReportCreateScheduledReportBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewScheduledReportCreateScheduledReportCreated creates a ScheduledReportCreateScheduledReportCreated with default headers values
func NewScheduledReportCreateScheduledReportCreated() *ScheduledReportCreateScheduledReportCreated {
	return &ScheduledReportCreateScheduledReportCreated{}
}

/*ScheduledReportCreateScheduledReportCreated handles this case with default header values.

The request completed successfully.
*/
type ScheduledReportCreateScheduledReportCreated struct {
	Payload *models.ScheduledReport
}

func (o *ScheduledReportCreateScheduledReportCreated) Error() string {
	return fmt.Sprintf("[POST /ScheduledReport][%d] scheduledReportCreateScheduledReportCreated  %+v", 201, o.Payload)
}

func (o *ScheduledReportCreateScheduledReportCreated) GetPayload() *models.ScheduledReport {
	return o.Payload
}

func (o *ScheduledReportCreateScheduledReportCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ScheduledReport)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewScheduledReportCreateScheduledReportBadRequest creates a ScheduledReportCreateScheduledReportBadRequest with default headers values
func NewScheduledReportCreateScheduledReportBadRequest() *ScheduledReportCreateScheduledReportBadRequest {
	return &ScheduledReportCreateScheduledReportBadRequest{}
}

/*ScheduledReportCreateScheduledReportBadRequest handles this case with default header values.

The request failed.
*/
type ScheduledReportCreateScheduledReportBadRequest struct {
	Payload *models.MessageList
}

func (o *ScheduledReportCreateScheduledReportBadRequest) Error() string {
	return fmt.Sprintf("[POST /ScheduledReport][%d] scheduledReportCreateScheduledReportBadRequest  %+v", 400, o.Payload)
}

func (o *ScheduledReportCreateScheduledReportBadRequest) GetPayload() *models.MessageList {
	return o.Payload
}

func (o *ScheduledReportCreateScheduledReportBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.MessageList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
