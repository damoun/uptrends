// Code generated by go-swagger; DO NOT EDIT.

package scheduled_report

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/damoun/uptrends/v4/models"
)

// ScheduledReportDeleteSpecifiedScheduledReportReader is a Reader for the ScheduledReportDeleteSpecifiedScheduledReport structure.
type ScheduledReportDeleteSpecifiedScheduledReportReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ScheduledReportDeleteSpecifiedScheduledReportReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewScheduledReportDeleteSpecifiedScheduledReportNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewScheduledReportDeleteSpecifiedScheduledReportBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewScheduledReportDeleteSpecifiedScheduledReportNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewScheduledReportDeleteSpecifiedScheduledReportNoContent creates a ScheduledReportDeleteSpecifiedScheduledReportNoContent with default headers values
func NewScheduledReportDeleteSpecifiedScheduledReportNoContent() *ScheduledReportDeleteSpecifiedScheduledReportNoContent {
	return &ScheduledReportDeleteSpecifiedScheduledReportNoContent{}
}

/*ScheduledReportDeleteSpecifiedScheduledReportNoContent handles this case with default header values.

The request completed successfully.
*/
type ScheduledReportDeleteSpecifiedScheduledReportNoContent struct {
}

func (o *ScheduledReportDeleteSpecifiedScheduledReportNoContent) Error() string {
	return fmt.Sprintf("[DELETE /ScheduledReport/{scheduledReportGuid}][%d] scheduledReportDeleteSpecifiedScheduledReportNoContent ", 204)
}

func (o *ScheduledReportDeleteSpecifiedScheduledReportNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewScheduledReportDeleteSpecifiedScheduledReportBadRequest creates a ScheduledReportDeleteSpecifiedScheduledReportBadRequest with default headers values
func NewScheduledReportDeleteSpecifiedScheduledReportBadRequest() *ScheduledReportDeleteSpecifiedScheduledReportBadRequest {
	return &ScheduledReportDeleteSpecifiedScheduledReportBadRequest{}
}

/*ScheduledReportDeleteSpecifiedScheduledReportBadRequest handles this case with default header values.

The request failed.
*/
type ScheduledReportDeleteSpecifiedScheduledReportBadRequest struct {
	Payload *models.MessageList
}

func (o *ScheduledReportDeleteSpecifiedScheduledReportBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /ScheduledReport/{scheduledReportGuid}][%d] scheduledReportDeleteSpecifiedScheduledReportBadRequest  %+v", 400, o.Payload)
}

func (o *ScheduledReportDeleteSpecifiedScheduledReportBadRequest) GetPayload() *models.MessageList {
	return o.Payload
}

func (o *ScheduledReportDeleteSpecifiedScheduledReportBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.MessageList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewScheduledReportDeleteSpecifiedScheduledReportNotFound creates a ScheduledReportDeleteSpecifiedScheduledReportNotFound with default headers values
func NewScheduledReportDeleteSpecifiedScheduledReportNotFound() *ScheduledReportDeleteSpecifiedScheduledReportNotFound {
	return &ScheduledReportDeleteSpecifiedScheduledReportNotFound{}
}

/*ScheduledReportDeleteSpecifiedScheduledReportNotFound handles this case with default header values.

One or more of the specified entities could not be found.
*/
type ScheduledReportDeleteSpecifiedScheduledReportNotFound struct {
	Payload *models.MessageList
}

func (o *ScheduledReportDeleteSpecifiedScheduledReportNotFound) Error() string {
	return fmt.Sprintf("[DELETE /ScheduledReport/{scheduledReportGuid}][%d] scheduledReportDeleteSpecifiedScheduledReportNotFound  %+v", 404, o.Payload)
}

func (o *ScheduledReportDeleteSpecifiedScheduledReportNotFound) GetPayload() *models.MessageList {
	return o.Payload
}

func (o *ScheduledReportDeleteSpecifiedScheduledReportNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.MessageList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
