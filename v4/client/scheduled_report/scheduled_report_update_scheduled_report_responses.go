// Code generated by go-swagger; DO NOT EDIT.

package scheduled_report

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/damoun/uptrends/v4/models"
)

// ScheduledReportUpdateScheduledReportReader is a Reader for the ScheduledReportUpdateScheduledReport structure.
type ScheduledReportUpdateScheduledReportReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ScheduledReportUpdateScheduledReportReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewScheduledReportUpdateScheduledReportNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewScheduledReportUpdateScheduledReportBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewScheduledReportUpdateScheduledReportNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewScheduledReportUpdateScheduledReportNoContent creates a ScheduledReportUpdateScheduledReportNoContent with default headers values
func NewScheduledReportUpdateScheduledReportNoContent() *ScheduledReportUpdateScheduledReportNoContent {
	return &ScheduledReportUpdateScheduledReportNoContent{}
}

/*ScheduledReportUpdateScheduledReportNoContent handles this case with default header values.

The request completed successfully.
*/
type ScheduledReportUpdateScheduledReportNoContent struct {
	Payload *models.ScheduledReport
}

func (o *ScheduledReportUpdateScheduledReportNoContent) Error() string {
	return fmt.Sprintf("[PUT /ScheduledReport/{scheduledReportGuid}][%d] scheduledReportUpdateScheduledReportNoContent  %+v", 204, o.Payload)
}

func (o *ScheduledReportUpdateScheduledReportNoContent) GetPayload() *models.ScheduledReport {
	return o.Payload
}

func (o *ScheduledReportUpdateScheduledReportNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ScheduledReport)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewScheduledReportUpdateScheduledReportBadRequest creates a ScheduledReportUpdateScheduledReportBadRequest with default headers values
func NewScheduledReportUpdateScheduledReportBadRequest() *ScheduledReportUpdateScheduledReportBadRequest {
	return &ScheduledReportUpdateScheduledReportBadRequest{}
}

/*ScheduledReportUpdateScheduledReportBadRequest handles this case with default header values.

The request failed.
*/
type ScheduledReportUpdateScheduledReportBadRequest struct {
	Payload *models.MessageList
}

func (o *ScheduledReportUpdateScheduledReportBadRequest) Error() string {
	return fmt.Sprintf("[PUT /ScheduledReport/{scheduledReportGuid}][%d] scheduledReportUpdateScheduledReportBadRequest  %+v", 400, o.Payload)
}

func (o *ScheduledReportUpdateScheduledReportBadRequest) GetPayload() *models.MessageList {
	return o.Payload
}

func (o *ScheduledReportUpdateScheduledReportBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.MessageList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewScheduledReportUpdateScheduledReportNotFound creates a ScheduledReportUpdateScheduledReportNotFound with default headers values
func NewScheduledReportUpdateScheduledReportNotFound() *ScheduledReportUpdateScheduledReportNotFound {
	return &ScheduledReportUpdateScheduledReportNotFound{}
}

/*ScheduledReportUpdateScheduledReportNotFound handles this case with default header values.

One or more of the specified entities could not be found.
*/
type ScheduledReportUpdateScheduledReportNotFound struct {
	Payload *models.MessageList
}

func (o *ScheduledReportUpdateScheduledReportNotFound) Error() string {
	return fmt.Sprintf("[PUT /ScheduledReport/{scheduledReportGuid}][%d] scheduledReportUpdateScheduledReportNotFound  %+v", 404, o.Payload)
}

func (o *ScheduledReportUpdateScheduledReportNotFound) GetPayload() *models.MessageList {
	return o.Payload
}

func (o *ScheduledReportUpdateScheduledReportNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.MessageList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
