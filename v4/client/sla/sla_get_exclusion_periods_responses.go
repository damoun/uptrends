// Code generated by go-swagger; DO NOT EDIT.

package sla

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/damoun/uptrends/v4/models"
)

// SLAGetExclusionPeriodsReader is a Reader for the SLAGetExclusionPeriods structure.
type SLAGetExclusionPeriodsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SLAGetExclusionPeriodsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSLAGetExclusionPeriodsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewSLAGetExclusionPeriodsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewSLAGetExclusionPeriodsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewSLAGetExclusionPeriodsOK creates a SLAGetExclusionPeriodsOK with default headers values
func NewSLAGetExclusionPeriodsOK() *SLAGetExclusionPeriodsOK {
	return &SLAGetExclusionPeriodsOK{}
}

/*SLAGetExclusionPeriodsOK handles this case with default header values.

The request completed successfully.
*/
type SLAGetExclusionPeriodsOK struct {
	Payload []*models.ExclusionPeriod
}

func (o *SLAGetExclusionPeriodsOK) Error() string {
	return fmt.Sprintf("[GET /Sla/{slaGuid}/ExclusionPeriod][%d] slaGetExclusionPeriodsOK  %+v", 200, o.Payload)
}

func (o *SLAGetExclusionPeriodsOK) GetPayload() []*models.ExclusionPeriod {
	return o.Payload
}

func (o *SLAGetExclusionPeriodsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSLAGetExclusionPeriodsBadRequest creates a SLAGetExclusionPeriodsBadRequest with default headers values
func NewSLAGetExclusionPeriodsBadRequest() *SLAGetExclusionPeriodsBadRequest {
	return &SLAGetExclusionPeriodsBadRequest{}
}

/*SLAGetExclusionPeriodsBadRequest handles this case with default header values.

The request failed.
*/
type SLAGetExclusionPeriodsBadRequest struct {
	Payload *models.MessageList
}

func (o *SLAGetExclusionPeriodsBadRequest) Error() string {
	return fmt.Sprintf("[GET /Sla/{slaGuid}/ExclusionPeriod][%d] slaGetExclusionPeriodsBadRequest  %+v", 400, o.Payload)
}

func (o *SLAGetExclusionPeriodsBadRequest) GetPayload() *models.MessageList {
	return o.Payload
}

func (o *SLAGetExclusionPeriodsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.MessageList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSLAGetExclusionPeriodsNotFound creates a SLAGetExclusionPeriodsNotFound with default headers values
func NewSLAGetExclusionPeriodsNotFound() *SLAGetExclusionPeriodsNotFound {
	return &SLAGetExclusionPeriodsNotFound{}
}

/*SLAGetExclusionPeriodsNotFound handles this case with default header values.

The specified SLA does not exist.
*/
type SLAGetExclusionPeriodsNotFound struct {
	Payload *models.MessageList
}

func (o *SLAGetExclusionPeriodsNotFound) Error() string {
	return fmt.Sprintf("[GET /Sla/{slaGuid}/ExclusionPeriod][%d] slaGetExclusionPeriodsNotFound  %+v", 404, o.Payload)
}

func (o *SLAGetExclusionPeriodsNotFound) GetPayload() *models.MessageList {
	return o.Payload
}

func (o *SLAGetExclusionPeriodsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.MessageList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
