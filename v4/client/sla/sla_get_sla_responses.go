// Code generated by go-swagger; DO NOT EDIT.

package sla

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/damoun/uptrends/v4/models"
)

// SLAGetSLAReader is a Reader for the SLAGetSLA structure.
type SLAGetSLAReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SLAGetSLAReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSLAGetSLAOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewSLAGetSLABadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewSLAGetSLAForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewSLAGetSLANotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewSLAGetSLAOK creates a SLAGetSLAOK with default headers values
func NewSLAGetSLAOK() *SLAGetSLAOK {
	return &SLAGetSLAOK{}
}

/*SLAGetSLAOK handles this case with default header values.

The request completed successfully.
*/
type SLAGetSLAOK struct {
	Payload *models.SLA
}

func (o *SLAGetSLAOK) Error() string {
	return fmt.Sprintf("[GET /Sla/{slaGuid}][%d] slaGetSlaOK  %+v", 200, o.Payload)
}

func (o *SLAGetSLAOK) GetPayload() *models.SLA {
	return o.Payload
}

func (o *SLAGetSLAOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SLA)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSLAGetSLABadRequest creates a SLAGetSLABadRequest with default headers values
func NewSLAGetSLABadRequest() *SLAGetSLABadRequest {
	return &SLAGetSLABadRequest{}
}

/*SLAGetSLABadRequest handles this case with default header values.

The request failed.
*/
type SLAGetSLABadRequest struct {
	Payload *models.MessageList
}

func (o *SLAGetSLABadRequest) Error() string {
	return fmt.Sprintf("[GET /Sla/{slaGuid}][%d] slaGetSlaBadRequest  %+v", 400, o.Payload)
}

func (o *SLAGetSLABadRequest) GetPayload() *models.MessageList {
	return o.Payload
}

func (o *SLAGetSLABadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.MessageList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSLAGetSLAForbidden creates a SLAGetSLAForbidden with default headers values
func NewSLAGetSLAForbidden() *SLAGetSLAForbidden {
	return &SLAGetSLAForbidden{}
}

/*SLAGetSLAForbidden handles this case with default header values.

One or more validation errors occurred.
*/
type SLAGetSLAForbidden struct {
	Payload *models.MessageList
}

func (o *SLAGetSLAForbidden) Error() string {
	return fmt.Sprintf("[GET /Sla/{slaGuid}][%d] slaGetSlaForbidden  %+v", 403, o.Payload)
}

func (o *SLAGetSLAForbidden) GetPayload() *models.MessageList {
	return o.Payload
}

func (o *SLAGetSLAForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.MessageList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSLAGetSLANotFound creates a SLAGetSLANotFound with default headers values
func NewSLAGetSLANotFound() *SLAGetSLANotFound {
	return &SLAGetSLANotFound{}
}

/*SLAGetSLANotFound handles this case with default header values.

The specified sla does not exist.
*/
type SLAGetSLANotFound struct {
	Payload *models.MessageList
}

func (o *SLAGetSLANotFound) Error() string {
	return fmt.Sprintf("[GET /Sla/{slaGuid}][%d] slaGetSlaNotFound  %+v", 404, o.Payload)
}

func (o *SLAGetSLANotFound) GetPayload() *models.MessageList {
	return o.Payload
}

func (o *SLAGetSLANotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.MessageList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
