// Code generated by go-swagger; DO NOT EDIT.

package sla

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/damoun/uptrends/v4/models"
)

// SLAGetSlasReader is a Reader for the SLAGetSlas structure.
type SLAGetSlasReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SLAGetSlasReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSLAGetSlasOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewSLAGetSlasBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewSLAGetSlasOK creates a SLAGetSlasOK with default headers values
func NewSLAGetSlasOK() *SLAGetSlasOK {
	return &SLAGetSlasOK{}
}

/*SLAGetSlasOK handles this case with default header values.

The request completed successfully.
*/
type SLAGetSlasOK struct {
	Payload []*models.SLA
}

func (o *SLAGetSlasOK) Error() string {
	return fmt.Sprintf("[GET /Sla][%d] slaGetSlasOK  %+v", 200, o.Payload)
}

func (o *SLAGetSlasOK) GetPayload() []*models.SLA {
	return o.Payload
}

func (o *SLAGetSlasOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSLAGetSlasBadRequest creates a SLAGetSlasBadRequest with default headers values
func NewSLAGetSlasBadRequest() *SLAGetSlasBadRequest {
	return &SLAGetSlasBadRequest{}
}

/*SLAGetSlasBadRequest handles this case with default header values.

The request failed.
*/
type SLAGetSlasBadRequest struct {
	Payload *models.MessageList
}

func (o *SLAGetSlasBadRequest) Error() string {
	return fmt.Sprintf("[GET /Sla][%d] slaGetSlasBadRequest  %+v", 400, o.Payload)
}

func (o *SLAGetSlasBadRequest) GetPayload() *models.MessageList {
	return o.Payload
}

func (o *SLAGetSlasBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.MessageList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
