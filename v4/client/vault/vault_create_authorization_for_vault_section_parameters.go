// Code generated by go-swagger; DO NOT EDIT.

package vault

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/damoun/uptrends/v4/models"
)

// NewVaultCreateAuthorizationForVaultSectionParams creates a new VaultCreateAuthorizationForVaultSectionParams object
// with the default values initialized.
func NewVaultCreateAuthorizationForVaultSectionParams() *VaultCreateAuthorizationForVaultSectionParams {
	var ()
	return &VaultCreateAuthorizationForVaultSectionParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewVaultCreateAuthorizationForVaultSectionParamsWithTimeout creates a new VaultCreateAuthorizationForVaultSectionParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewVaultCreateAuthorizationForVaultSectionParamsWithTimeout(timeout time.Duration) *VaultCreateAuthorizationForVaultSectionParams {
	var ()
	return &VaultCreateAuthorizationForVaultSectionParams{

		timeout: timeout,
	}
}

// NewVaultCreateAuthorizationForVaultSectionParamsWithContext creates a new VaultCreateAuthorizationForVaultSectionParams object
// with the default values initialized, and the ability to set a context for a request
func NewVaultCreateAuthorizationForVaultSectionParamsWithContext(ctx context.Context) *VaultCreateAuthorizationForVaultSectionParams {
	var ()
	return &VaultCreateAuthorizationForVaultSectionParams{

		Context: ctx,
	}
}

// NewVaultCreateAuthorizationForVaultSectionParamsWithHTTPClient creates a new VaultCreateAuthorizationForVaultSectionParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewVaultCreateAuthorizationForVaultSectionParamsWithHTTPClient(client *http.Client) *VaultCreateAuthorizationForVaultSectionParams {
	var ()
	return &VaultCreateAuthorizationForVaultSectionParams{
		HTTPClient: client,
	}
}

/*VaultCreateAuthorizationForVaultSectionParams contains all the parameters to send to the API endpoint
for the vault create authorization for vault section operation typically these are written to a http.Request
*/
type VaultCreateAuthorizationForVaultSectionParams struct {

	/*Authorization*/
	Authorization *models.Authorization
	/*VaultSectionGUID
	  The Guid of the vault section for which to create the new authorization.

	*/
	VaultSectionGUID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the vault create authorization for vault section params
func (o *VaultCreateAuthorizationForVaultSectionParams) WithTimeout(timeout time.Duration) *VaultCreateAuthorizationForVaultSectionParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the vault create authorization for vault section params
func (o *VaultCreateAuthorizationForVaultSectionParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the vault create authorization for vault section params
func (o *VaultCreateAuthorizationForVaultSectionParams) WithContext(ctx context.Context) *VaultCreateAuthorizationForVaultSectionParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the vault create authorization for vault section params
func (o *VaultCreateAuthorizationForVaultSectionParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the vault create authorization for vault section params
func (o *VaultCreateAuthorizationForVaultSectionParams) WithHTTPClient(client *http.Client) *VaultCreateAuthorizationForVaultSectionParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the vault create authorization for vault section params
func (o *VaultCreateAuthorizationForVaultSectionParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAuthorization adds the authorization to the vault create authorization for vault section params
func (o *VaultCreateAuthorizationForVaultSectionParams) WithAuthorization(authorization *models.Authorization) *VaultCreateAuthorizationForVaultSectionParams {
	o.SetAuthorization(authorization)
	return o
}

// SetAuthorization adds the authorization to the vault create authorization for vault section params
func (o *VaultCreateAuthorizationForVaultSectionParams) SetAuthorization(authorization *models.Authorization) {
	o.Authorization = authorization
}

// WithVaultSectionGUID adds the vaultSectionGUID to the vault create authorization for vault section params
func (o *VaultCreateAuthorizationForVaultSectionParams) WithVaultSectionGUID(vaultSectionGUID string) *VaultCreateAuthorizationForVaultSectionParams {
	o.SetVaultSectionGUID(vaultSectionGUID)
	return o
}

// SetVaultSectionGUID adds the vaultSectionGuid to the vault create authorization for vault section params
func (o *VaultCreateAuthorizationForVaultSectionParams) SetVaultSectionGUID(vaultSectionGUID string) {
	o.VaultSectionGUID = vaultSectionGUID
}

// WriteToRequest writes these params to a swagger request
func (o *VaultCreateAuthorizationForVaultSectionParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Authorization != nil {
		if err := r.SetBodyParam(o.Authorization); err != nil {
			return err
		}
	}

	// path param vaultSectionGuid
	if err := r.SetPathParam("vaultSectionGuid", o.VaultSectionGUID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
