// Code generated by go-swagger; DO NOT EDIT.

package vault

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewVaultDeleteVaultItemParams creates a new VaultDeleteVaultItemParams object
// with the default values initialized.
func NewVaultDeleteVaultItemParams() *VaultDeleteVaultItemParams {
	var ()
	return &VaultDeleteVaultItemParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewVaultDeleteVaultItemParamsWithTimeout creates a new VaultDeleteVaultItemParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewVaultDeleteVaultItemParamsWithTimeout(timeout time.Duration) *VaultDeleteVaultItemParams {
	var ()
	return &VaultDeleteVaultItemParams{

		timeout: timeout,
	}
}

// NewVaultDeleteVaultItemParamsWithContext creates a new VaultDeleteVaultItemParams object
// with the default values initialized, and the ability to set a context for a request
func NewVaultDeleteVaultItemParamsWithContext(ctx context.Context) *VaultDeleteVaultItemParams {
	var ()
	return &VaultDeleteVaultItemParams{

		Context: ctx,
	}
}

// NewVaultDeleteVaultItemParamsWithHTTPClient creates a new VaultDeleteVaultItemParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewVaultDeleteVaultItemParamsWithHTTPClient(client *http.Client) *VaultDeleteVaultItemParams {
	var ()
	return &VaultDeleteVaultItemParams{
		HTTPClient: client,
	}
}

/*VaultDeleteVaultItemParams contains all the parameters to send to the API endpoint
for the vault delete vault item operation typically these are written to a http.Request
*/
type VaultDeleteVaultItemParams struct {

	/*VaultItemGUID
	  The Guid of the vault item that should be deleted.

	*/
	VaultItemGUID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the vault delete vault item params
func (o *VaultDeleteVaultItemParams) WithTimeout(timeout time.Duration) *VaultDeleteVaultItemParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the vault delete vault item params
func (o *VaultDeleteVaultItemParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the vault delete vault item params
func (o *VaultDeleteVaultItemParams) WithContext(ctx context.Context) *VaultDeleteVaultItemParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the vault delete vault item params
func (o *VaultDeleteVaultItemParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the vault delete vault item params
func (o *VaultDeleteVaultItemParams) WithHTTPClient(client *http.Client) *VaultDeleteVaultItemParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the vault delete vault item params
func (o *VaultDeleteVaultItemParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithVaultItemGUID adds the vaultItemGUID to the vault delete vault item params
func (o *VaultDeleteVaultItemParams) WithVaultItemGUID(vaultItemGUID string) *VaultDeleteVaultItemParams {
	o.SetVaultItemGUID(vaultItemGUID)
	return o
}

// SetVaultItemGUID adds the vaultItemGuid to the vault delete vault item params
func (o *VaultDeleteVaultItemParams) SetVaultItemGUID(vaultItemGUID string) {
	o.VaultItemGUID = vaultItemGUID
}

// WriteToRequest writes these params to a swagger request
func (o *VaultDeleteVaultItemParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param vaultItemGuid
	if err := r.SetPathParam("vaultItemGuid", o.VaultItemGUID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
