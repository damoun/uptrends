// Code generated by go-swagger; DO NOT EDIT.

package vault

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/damoun/uptrends/v4/models"
)

// VaultGetAuthorizationsForVaultSectionReader is a Reader for the VaultGetAuthorizationsForVaultSection structure.
type VaultGetAuthorizationsForVaultSectionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *VaultGetAuthorizationsForVaultSectionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewVaultGetAuthorizationsForVaultSectionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewVaultGetAuthorizationsForVaultSectionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewVaultGetAuthorizationsForVaultSectionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewVaultGetAuthorizationsForVaultSectionOK creates a VaultGetAuthorizationsForVaultSectionOK with default headers values
func NewVaultGetAuthorizationsForVaultSectionOK() *VaultGetAuthorizationsForVaultSectionOK {
	return &VaultGetAuthorizationsForVaultSectionOK{}
}

/*VaultGetAuthorizationsForVaultSectionOK handles this case with default header values.

Request completed successfully.
*/
type VaultGetAuthorizationsForVaultSectionOK struct {
	Payload *models.Authorization
}

func (o *VaultGetAuthorizationsForVaultSectionOK) Error() string {
	return fmt.Sprintf("[GET /VaultSection/{vaultSectionGuid}/Authorization][%d] vaultGetAuthorizationsForVaultSectionOK  %+v", 200, o.Payload)
}

func (o *VaultGetAuthorizationsForVaultSectionOK) GetPayload() *models.Authorization {
	return o.Payload
}

func (o *VaultGetAuthorizationsForVaultSectionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Authorization)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewVaultGetAuthorizationsForVaultSectionBadRequest creates a VaultGetAuthorizationsForVaultSectionBadRequest with default headers values
func NewVaultGetAuthorizationsForVaultSectionBadRequest() *VaultGetAuthorizationsForVaultSectionBadRequest {
	return &VaultGetAuthorizationsForVaultSectionBadRequest{}
}

/*VaultGetAuthorizationsForVaultSectionBadRequest handles this case with default header values.

The request failed.
*/
type VaultGetAuthorizationsForVaultSectionBadRequest struct {
	Payload *models.APIMessageInfo
}

func (o *VaultGetAuthorizationsForVaultSectionBadRequest) Error() string {
	return fmt.Sprintf("[GET /VaultSection/{vaultSectionGuid}/Authorization][%d] vaultGetAuthorizationsForVaultSectionBadRequest  %+v", 400, o.Payload)
}

func (o *VaultGetAuthorizationsForVaultSectionBadRequest) GetPayload() *models.APIMessageInfo {
	return o.Payload
}

func (o *VaultGetAuthorizationsForVaultSectionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIMessageInfo)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewVaultGetAuthorizationsForVaultSectionNotFound creates a VaultGetAuthorizationsForVaultSectionNotFound with default headers values
func NewVaultGetAuthorizationsForVaultSectionNotFound() *VaultGetAuthorizationsForVaultSectionNotFound {
	return &VaultGetAuthorizationsForVaultSectionNotFound{}
}

/*VaultGetAuthorizationsForVaultSectionNotFound handles this case with default header values.

The requested vault section does not exist.
*/
type VaultGetAuthorizationsForVaultSectionNotFound struct {
	Payload *models.APIMessageInfo
}

func (o *VaultGetAuthorizationsForVaultSectionNotFound) Error() string {
	return fmt.Sprintf("[GET /VaultSection/{vaultSectionGuid}/Authorization][%d] vaultGetAuthorizationsForVaultSectionNotFound  %+v", 404, o.Payload)
}

func (o *VaultGetAuthorizationsForVaultSectionNotFound) GetPayload() *models.APIMessageInfo {
	return o.Payload
}

func (o *VaultGetAuthorizationsForVaultSectionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIMessageInfo)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
