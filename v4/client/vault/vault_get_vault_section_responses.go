// Code generated by go-swagger; DO NOT EDIT.

package vault

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/damoun/uptrends/v4/models"
)

// VaultGetVaultSectionReader is a Reader for the VaultGetVaultSection structure.
type VaultGetVaultSectionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *VaultGetVaultSectionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewVaultGetVaultSectionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewVaultGetVaultSectionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewVaultGetVaultSectionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewVaultGetVaultSectionOK creates a VaultGetVaultSectionOK with default headers values
func NewVaultGetVaultSectionOK() *VaultGetVaultSectionOK {
	return &VaultGetVaultSectionOK{}
}

/*VaultGetVaultSectionOK handles this case with default header values.

Request completed successfully.
*/
type VaultGetVaultSectionOK struct {
	Payload *models.VaultSection
}

func (o *VaultGetVaultSectionOK) Error() string {
	return fmt.Sprintf("[GET /VaultSection/{vaultSectionGuid}][%d] vaultGetVaultSectionOK  %+v", 200, o.Payload)
}

func (o *VaultGetVaultSectionOK) GetPayload() *models.VaultSection {
	return o.Payload
}

func (o *VaultGetVaultSectionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.VaultSection)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewVaultGetVaultSectionBadRequest creates a VaultGetVaultSectionBadRequest with default headers values
func NewVaultGetVaultSectionBadRequest() *VaultGetVaultSectionBadRequest {
	return &VaultGetVaultSectionBadRequest{}
}

/*VaultGetVaultSectionBadRequest handles this case with default header values.

The request failed.
*/
type VaultGetVaultSectionBadRequest struct {
	Payload *models.APIMessageInfo
}

func (o *VaultGetVaultSectionBadRequest) Error() string {
	return fmt.Sprintf("[GET /VaultSection/{vaultSectionGuid}][%d] vaultGetVaultSectionBadRequest  %+v", 400, o.Payload)
}

func (o *VaultGetVaultSectionBadRequest) GetPayload() *models.APIMessageInfo {
	return o.Payload
}

func (o *VaultGetVaultSectionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIMessageInfo)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewVaultGetVaultSectionNotFound creates a VaultGetVaultSectionNotFound with default headers values
func NewVaultGetVaultSectionNotFound() *VaultGetVaultSectionNotFound {
	return &VaultGetVaultSectionNotFound{}
}

/*VaultGetVaultSectionNotFound handles this case with default header values.

The requested vault section does not exist.
*/
type VaultGetVaultSectionNotFound struct {
	Payload *models.APIMessageInfo
}

func (o *VaultGetVaultSectionNotFound) Error() string {
	return fmt.Sprintf("[GET /VaultSection/{vaultSectionGuid}][%d] vaultGetVaultSectionNotFound  %+v", 404, o.Payload)
}

func (o *VaultGetVaultSectionNotFound) GetPayload() *models.APIMessageInfo {
	return o.Payload
}

func (o *VaultGetVaultSectionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIMessageInfo)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
