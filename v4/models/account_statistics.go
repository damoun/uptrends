// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// AccountStatistics account statistics
//
// swagger:model AccountStatistics
type AccountStatistics struct {

	// account Id
	AccountID string `json:"AccountId,omitempty"`

	// expiration date
	// Format: date-time
	ExpirationDate strfmt.DateTime `json:"ExpirationDate,omitempty"`

	// monitor quota
	MonitorQuota *MonitorQuota `json:"MonitorQuota,omitempty"`

	// operator quota
	OperatorQuota *OperatorQuota `json:"OperatorQuota,omitempty"`

	// remaining message credits
	RemainingMessageCredits int32 `json:"RemainingMessageCredits,omitempty"`
}

// Validate validates this account statistics
func (m *AccountStatistics) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateExpirationDate(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateMonitorQuota(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateOperatorQuota(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *AccountStatistics) validateExpirationDate(formats strfmt.Registry) error {

	if swag.IsZero(m.ExpirationDate) { // not required
		return nil
	}

	if err := validate.FormatOf("ExpirationDate", "body", "date-time", m.ExpirationDate.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *AccountStatistics) validateMonitorQuota(formats strfmt.Registry) error {

	if swag.IsZero(m.MonitorQuota) { // not required
		return nil
	}

	if m.MonitorQuota != nil {
		if err := m.MonitorQuota.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("MonitorQuota")
			}
			return err
		}
	}

	return nil
}

func (m *AccountStatistics) validateOperatorQuota(formats strfmt.Registry) error {

	if swag.IsZero(m.OperatorQuota) { // not required
		return nil
	}

	if m.OperatorQuota != nil {
		if err := m.OperatorQuota.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("OperatorQuota")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *AccountStatistics) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *AccountStatistics) UnmarshalBinary(b []byte) error {
	var res AccountStatistics
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
