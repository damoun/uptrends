// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// AlertDefinitionOperatorGroup alert definition operator group
//
// swagger:model AlertDefinitionOperatorGroup
type AlertDefinitionOperatorGroup struct {

	// alert definition
	// Required: true
	AlertDefinition *string `json:"AlertDefinition"`

	// escalationlevel
	// Required: true
	Escalationlevel *int64 `json:"Escalationlevel"`

	// operator group
	// Required: true
	OperatorGroup *string `json:"OperatorGroup"`
}

// Validate validates this alert definition operator group
func (m *AlertDefinitionOperatorGroup) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAlertDefinition(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateEscalationlevel(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateOperatorGroup(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *AlertDefinitionOperatorGroup) validateAlertDefinition(formats strfmt.Registry) error {

	if err := validate.Required("AlertDefinition", "body", m.AlertDefinition); err != nil {
		return err
	}

	return nil
}

func (m *AlertDefinitionOperatorGroup) validateEscalationlevel(formats strfmt.Registry) error {

	if err := validate.Required("Escalationlevel", "body", m.Escalationlevel); err != nil {
		return err
	}

	return nil
}

func (m *AlertDefinitionOperatorGroup) validateOperatorGroup(formats strfmt.Registry) error {

	if err := validate.Required("OperatorGroup", "body", m.OperatorGroup); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *AlertDefinitionOperatorGroup) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *AlertDefinitionOperatorGroup) UnmarshalBinary(b []byte) error {
	var res AlertDefinitionOperatorGroup
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
