// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// AlertType alert type
//
// swagger:model AlertType
type AlertType string

const (

	// AlertTypeOk captures enum value "Ok"
	AlertTypeOk AlertType = "Ok"

	// AlertTypeError captures enum value "Error"
	AlertTypeError AlertType = "Error"

	// AlertTypeReminder captures enum value "Reminder"
	AlertTypeReminder AlertType = "Reminder"
)

// for schema
var alertTypeEnum []interface{}

func init() {
	var res []AlertType
	if err := json.Unmarshal([]byte(`["Ok","Error","Reminder"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		alertTypeEnum = append(alertTypeEnum, v)
	}
}

func (m AlertType) validateAlertTypeEnum(path, location string, value AlertType) error {
	if err := validate.EnumCase(path, location, value, alertTypeEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this alert type
func (m AlertType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateAlertTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
