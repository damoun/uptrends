// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// APIComparisonType Api comparison type
//
// swagger:model ApiComparisonType
type APIComparisonType string

const (

	// APIComparisonTypeEqual captures enum value "Equal"
	APIComparisonTypeEqual APIComparisonType = "Equal"

	// APIComparisonTypeDoesNotEqual captures enum value "DoesNotEqual"
	APIComparisonTypeDoesNotEqual APIComparisonType = "DoesNotEqual"

	// APIComparisonTypeContainsText captures enum value "ContainsText"
	APIComparisonTypeContainsText APIComparisonType = "ContainsText"

	// APIComparisonTypeDoesNotContainText captures enum value "DoesNotContainText"
	APIComparisonTypeDoesNotContainText APIComparisonType = "DoesNotContainText"

	// APIComparisonTypeShouldBeIgnored captures enum value "ShouldBeIgnored"
	APIComparisonTypeShouldBeIgnored APIComparisonType = "ShouldBeIgnored"

	// APIComparisonTypeLessThan captures enum value "LessThan"
	APIComparisonTypeLessThan APIComparisonType = "LessThan"

	// APIComparisonTypeGreaterThan captures enum value "GreaterThan"
	APIComparisonTypeGreaterThan APIComparisonType = "GreaterThan"

	// APIComparisonTypeLessThanOrEqual captures enum value "LessThanOrEqual"
	APIComparisonTypeLessThanOrEqual APIComparisonType = "LessThanOrEqual"

	// APIComparisonTypeGreaterThanOrEqual captures enum value "GreaterThanOrEqual"
	APIComparisonTypeGreaterThanOrEqual APIComparisonType = "GreaterThanOrEqual"

	// APIComparisonTypeIsNotEmpty captures enum value "IsNotEmpty"
	APIComparisonTypeIsNotEmpty APIComparisonType = "IsNotEmpty"
)

// for schema
var apiComparisonTypeEnum []interface{}

func init() {
	var res []APIComparisonType
	if err := json.Unmarshal([]byte(`["Equal","DoesNotEqual","ContainsText","DoesNotContainText","ShouldBeIgnored","LessThan","GreaterThan","LessThanOrEqual","GreaterThanOrEqual","IsNotEmpty"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		apiComparisonTypeEnum = append(apiComparisonTypeEnum, v)
	}
}

func (m APIComparisonType) validateAPIComparisonTypeEnum(path, location string, value APIComparisonType) error {
	if err := validate.EnumCase(path, location, value, apiComparisonTypeEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this Api comparison type
func (m APIComparisonType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateAPIComparisonTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
