// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// BrowserWindowDimensions browser window dimensions
//
// swagger:model BrowserWindowDimensions
type BrowserWindowDimensions struct {

	// height
	// Required: true
	Height *int32 `json:"Height"`

	// is mobile
	// Required: true
	IsMobile *bool `json:"IsMobile"`

	// mobile device
	MobileDevice string `json:"MobileDevice,omitempty"`

	// pixel ratio
	// Required: true
	PixelRatio *int32 `json:"PixelRatio"`

	// width
	// Required: true
	Width *int32 `json:"Width"`
}

// Validate validates this browser window dimensions
func (m *BrowserWindowDimensions) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateHeight(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateIsMobile(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validatePixelRatio(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateWidth(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *BrowserWindowDimensions) validateHeight(formats strfmt.Registry) error {

	if err := validate.Required("Height", "body", m.Height); err != nil {
		return err
	}

	return nil
}

func (m *BrowserWindowDimensions) validateIsMobile(formats strfmt.Registry) error {

	if err := validate.Required("IsMobile", "body", m.IsMobile); err != nil {
		return err
	}

	return nil
}

func (m *BrowserWindowDimensions) validatePixelRatio(formats strfmt.Registry) error {

	if err := validate.Required("PixelRatio", "body", m.PixelRatio); err != nil {
		return err
	}

	return nil
}

func (m *BrowserWindowDimensions) validateWidth(formats strfmt.Registry) error {

	if err := validate.Required("Width", "body", m.Width); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *BrowserWindowDimensions) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *BrowserWindowDimensions) UnmarshalBinary(b []byte) error {
	var res BrowserWindowDimensions
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
