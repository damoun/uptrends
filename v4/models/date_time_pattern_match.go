// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// DateTimePatternMatch date time pattern match
//
// swagger:model DateTimePatternMatch
type DateTimePatternMatch struct {

	// max difference
	// Required: true
	MaxDifference *int32 `json:"MaxDifference"`

	// offset u t c
	// Required: true
	OffsetUTC *int32 `json:"OffsetUTC"`
}

// Validate validates this date time pattern match
func (m *DateTimePatternMatch) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateMaxDifference(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateOffsetUTC(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *DateTimePatternMatch) validateMaxDifference(formats strfmt.Registry) error {

	if err := validate.Required("MaxDifference", "body", m.MaxDifference); err != nil {
		return err
	}

	return nil
}

func (m *DateTimePatternMatch) validateOffsetUTC(formats strfmt.Registry) error {

	if err := validate.Required("OffsetUTC", "body", m.OffsetUTC); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *DateTimePatternMatch) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DateTimePatternMatch) UnmarshalBinary(b []byte) error {
	var res DateTimePatternMatch
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
