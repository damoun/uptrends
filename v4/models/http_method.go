// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// HTTPMethod Http method
//
// swagger:model HttpMethod
type HTTPMethod string

const (

	// HTTPMethodGet captures enum value "Get"
	HTTPMethodGet HTTPMethod = "Get"

	// HTTPMethodPost captures enum value "Post"
	HTTPMethodPost HTTPMethod = "Post"
)

// for schema
var httpMethodEnum []interface{}

func init() {
	var res []HTTPMethod
	if err := json.Unmarshal([]byte(`["Get","Post"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		httpMethodEnum = append(httpMethodEnum, v)
	}
}

func (m HTTPMethod) validateHTTPMethodEnum(path, location string, value HTTPMethod) error {
	if err := validate.EnumCase(path, location, value, httpMethodEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this Http method
func (m HTTPMethod) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateHTTPMethodEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
