// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// IPVersion Ip version
//
// swagger:model IpVersion
type IPVersion string

const (

	// IPVersionIPV4 captures enum value "IpV4"
	IPVersionIPV4 IPVersion = "IpV4"

	// IPVersionIPV6 captures enum value "IpV6"
	IPVersionIPV6 IPVersion = "IpV6"
)

// for schema
var ipVersionEnum []interface{}

func init() {
	var res []IPVersion
	if err := json.Unmarshal([]byte(`["IpV4","IpV6"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		ipVersionEnum = append(ipVersionEnum, v)
	}
}

func (m IPVersion) validateIPVersionEnum(path, location string, value IPVersion) error {
	if err := validate.EnumCase(path, location, value, ipVersionEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this Ip version
func (m IPVersion) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateIPVersionEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
