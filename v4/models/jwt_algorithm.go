// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// JwtAlgorithm jwt algorithm
//
// swagger:model JwtAlgorithm
type JwtAlgorithm string

const (

	// JwtAlgorithmHS256 captures enum value "HS256"
	JwtAlgorithmHS256 JwtAlgorithm = "HS256"

	// JwtAlgorithmHS384 captures enum value "HS384"
	JwtAlgorithmHS384 JwtAlgorithm = "HS384"

	// JwtAlgorithmHS512 captures enum value "HS512"
	JwtAlgorithmHS512 JwtAlgorithm = "HS512"
)

// for schema
var jwtAlgorithmEnum []interface{}

func init() {
	var res []JwtAlgorithm
	if err := json.Unmarshal([]byte(`["HS256","HS384","HS512"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		jwtAlgorithmEnum = append(jwtAlgorithmEnum, v)
	}
}

func (m JwtAlgorithm) validateJwtAlgorithmEnum(path, location string, value JwtAlgorithm) error {
	if err := validate.EnumCase(path, location, value, jwtAlgorithmEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this jwt algorithm
func (m JwtAlgorithm) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateJwtAlgorithmEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
