// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// MonitorStatusAttributes Monitor Status attributes
//
// swagger:model MonitorStatusAttributes
type MonitorStatusAttributes struct {

	// Checkpoint id for the monitor status
	CheckpointID int32 `json:"CheckpointId,omitempty"`

	// Error code for the monitor status
	// Required: true
	ErrorCode *int32 `json:"ErrorCode"`

	// Error description for the monitor status
	ErrorDescription string `json:"ErrorDescription,omitempty"`

	// The error level for the monitor status
	// Required: true
	ErrorLevel struct {
		LastErrorLevel
	} `json:"ErrorLevel"`

	// Last checked timeStamp for this monitor
	// Format: date-time
	LastCheck strfmt.DateTime `json:"LastCheck,omitempty"`

	// Last monitor check id
	LastMonitorCheckID int64 `json:"LastMonitorCheckId,omitempty"`

	// Uptime percentage for the monitor status
	// Required: true
	UptimePercentage *float64 `json:"UptimePercentage"`
}

// Validate validates this monitor status attributes
func (m *MonitorStatusAttributes) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateErrorCode(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateErrorLevel(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLastCheck(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateUptimePercentage(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *MonitorStatusAttributes) validateErrorCode(formats strfmt.Registry) error {

	if err := validate.Required("ErrorCode", "body", m.ErrorCode); err != nil {
		return err
	}

	return nil
}

func (m *MonitorStatusAttributes) validateErrorLevel(formats strfmt.Registry) error {

	return nil
}

func (m *MonitorStatusAttributes) validateLastCheck(formats strfmt.Registry) error {

	if swag.IsZero(m.LastCheck) { // not required
		return nil
	}

	if err := validate.FormatOf("LastCheck", "body", "date-time", m.LastCheck.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *MonitorStatusAttributes) validateUptimePercentage(formats strfmt.Registry) error {

	if err := validate.Required("UptimePercentage", "body", m.UptimePercentage); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *MonitorStatusAttributes) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *MonitorStatusAttributes) UnmarshalBinary(b []byte) error {
	var res MonitorStatusAttributes
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
