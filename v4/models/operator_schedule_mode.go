// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// OperatorScheduleMode operator schedule mode
//
// swagger:model OperatorScheduleMode
type OperatorScheduleMode string

const (

	// OperatorScheduleModeOneTime captures enum value "OneTime"
	OperatorScheduleModeOneTime OperatorScheduleMode = "OneTime"

	// OperatorScheduleModeDaily captures enum value "Daily"
	OperatorScheduleModeDaily OperatorScheduleMode = "Daily"

	// OperatorScheduleModeWeekly captures enum value "Weekly"
	OperatorScheduleModeWeekly OperatorScheduleMode = "Weekly"

	// OperatorScheduleModeMonthly captures enum value "Monthly"
	OperatorScheduleModeMonthly OperatorScheduleMode = "Monthly"
)

// for schema
var operatorScheduleModeEnum []interface{}

func init() {
	var res []OperatorScheduleMode
	if err := json.Unmarshal([]byte(`["OneTime","Daily","Weekly","Monthly"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		operatorScheduleModeEnum = append(operatorScheduleModeEnum, v)
	}
}

func (m OperatorScheduleMode) validateOperatorScheduleModeEnum(path, location string, value OperatorScheduleMode) error {
	if err := validate.EnumCase(path, location, value, operatorScheduleModeEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this operator schedule mode
func (m OperatorScheduleMode) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateOperatorScheduleModeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
