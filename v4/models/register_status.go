// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// RegisterStatus register status
//
// swagger:model RegisterStatus
type RegisterStatus string

const (

	// RegisterStatusOK captures enum value "OK"
	RegisterStatusOK RegisterStatus = "OK"

	// RegisterStatusUnexpectedError captures enum value "UnexpectedError"
	RegisterStatusUnexpectedError RegisterStatus = "UnexpectedError"
)

// for schema
var registerStatusEnum []interface{}

func init() {
	var res []RegisterStatus
	if err := json.Unmarshal([]byte(`["OK","UnexpectedError"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		registerStatusEnum = append(registerStatusEnum, v)
	}
}

func (m RegisterStatus) validateRegisterStatusEnum(path, location string, value RegisterStatus) error {
	if err := validate.EnumCase(path, location, value, registerStatusEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this register status
func (m RegisterStatus) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateRegisterStatusEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
