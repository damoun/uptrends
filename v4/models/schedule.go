// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// Schedule schedule
//
// swagger:model Schedule
type Schedule struct {

	// month day
	MonthDay int32 `json:"MonthDay,omitempty"`

	// schedule type
	ScheduleType ScheduleType `json:"ScheduleType,omitempty"`

	// time
	Time string `json:"Time,omitempty"`

	// week day
	WeekDay DayOfWeek `json:"WeekDay,omitempty"`
}

// Validate validates this schedule
func (m *Schedule) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateScheduleType(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateWeekDay(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *Schedule) validateScheduleType(formats strfmt.Registry) error {

	if swag.IsZero(m.ScheduleType) { // not required
		return nil
	}

	if err := m.ScheduleType.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("ScheduleType")
		}
		return err
	}

	return nil
}

func (m *Schedule) validateWeekDay(formats strfmt.Registry) error {

	if swag.IsZero(m.WeekDay) { // not required
		return nil
	}

	if err := m.WeekDay.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("WeekDay")
		}
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *Schedule) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Schedule) UnmarshalBinary(b []byte) error {
	var res Schedule
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
