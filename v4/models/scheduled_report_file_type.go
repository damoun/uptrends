// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// ScheduledReportFileType scheduled report file type
//
// swagger:model ScheduledReportFileType
type ScheduledReportFileType string

const (

	// ScheduledReportFileTypePDF captures enum value "PDF"
	ScheduledReportFileTypePDF ScheduledReportFileType = "PDF"

	// ScheduledReportFileTypeExcel captures enum value "Excel"
	ScheduledReportFileTypeExcel ScheduledReportFileType = "Excel"

	// ScheduledReportFileTypeHTML captures enum value "Html"
	ScheduledReportFileTypeHTML ScheduledReportFileType = "Html"
)

// for schema
var scheduledReportFileTypeEnum []interface{}

func init() {
	var res []ScheduledReportFileType
	if err := json.Unmarshal([]byte(`["PDF","Excel","Html"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		scheduledReportFileTypeEnum = append(scheduledReportFileTypeEnum, v)
	}
}

func (m ScheduledReportFileType) validateScheduledReportFileTypeEnum(path, location string, value ScheduledReportFileType) error {
	if err := validate.EnumCase(path, location, value, scheduledReportFileTypeEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this scheduled report file type
func (m ScheduledReportFileType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateScheduledReportFileTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
