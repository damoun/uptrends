// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// SftpAction sftp action
//
// swagger:model SftpAction
type SftpAction string

const (

	// SftpActionConnectOnly captures enum value "ConnectOnly"
	SftpActionConnectOnly SftpAction = "ConnectOnly"

	// SftpActionTestFileExists captures enum value "TestFileExists"
	SftpActionTestFileExists SftpAction = "TestFileExists"

	// SftpActionTestFileDoesNotExist captures enum value "TestFileDoesNotExist"
	SftpActionTestFileDoesNotExist SftpAction = "TestFileDoesNotExist"

	// SftpActionDownLoadFile captures enum value "DownLoadFile"
	SftpActionDownLoadFile SftpAction = "DownLoadFile"
)

// for schema
var sftpActionEnum []interface{}

func init() {
	var res []SftpAction
	if err := json.Unmarshal([]byte(`["ConnectOnly","TestFileExists","TestFileDoesNotExist","DownLoadFile"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		sftpActionEnum = append(sftpActionEnum, v)
	}
}

func (m SftpAction) validateSftpActionEnum(path, location string, value SftpAction) error {
	if err := validate.EnumCase(path, location, value, sftpActionEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this sftp action
func (m SftpAction) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateSftpActionEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
