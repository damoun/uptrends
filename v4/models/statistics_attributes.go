// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// StatisticsAttributes statistics attributes
//
// swagger:model StatisticsAttributes
type StatisticsAttributes struct {

	// alerts
	Alerts int32 `json:"Alerts,omitempty"`

	// checks
	Checks int64 `json:"Checks,omitempty"`

	// confirmed errors
	ConfirmedErrors int32 `json:"ConfirmedErrors,omitempty"`

	// connection time
	ConnectionTime float64 `json:"ConnectionTime,omitempty"`

	// download time
	DownloadTime float64 `json:"DownloadTime,omitempty"`

	// downtime
	Downtime int64 `json:"Downtime,omitempty"`

	// downtime percentage
	DowntimePercentage float64 `json:"DowntimePercentage,omitempty"`

	// end date time
	// Required: true
	// Format: date-time
	EndDateTime *strfmt.DateTime `json:"EndDateTime"`

	// operator response target
	OperatorResponseTarget float64 `json:"OperatorResponseTarget,omitempty"`

	// operator response time
	OperatorResponseTime float64 `json:"OperatorResponseTime,omitempty"`

	// resolve time
	ResolveTime float64 `json:"ResolveTime,omitempty"`

	// Sla target
	SLATarget float64 `json:"SlaTarget,omitempty"`

	// Sla target total time
	SLATargetTotalTime float64 `json:"SlaTargetTotalTime,omitempty"`

	// start date time
	// Required: true
	// Format: date-time
	StartDateTime *strfmt.DateTime `json:"StartDateTime"`

	// total bytes
	TotalBytes int64 `json:"TotalBytes,omitempty"`

	// total time
	TotalTime float64 `json:"TotalTime,omitempty"`

	// unconfirmed errors
	UnconfirmedErrors int32 `json:"UnconfirmedErrors,omitempty"`

	// uptime
	Uptime int64 `json:"Uptime,omitempty"`

	// uptime percentage
	UptimePercentage float64 `json:"UptimePercentage,omitempty"`
}

// Validate validates this statistics attributes
func (m *StatisticsAttributes) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateEndDateTime(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateStartDateTime(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *StatisticsAttributes) validateEndDateTime(formats strfmt.Registry) error {

	if err := validate.Required("EndDateTime", "body", m.EndDateTime); err != nil {
		return err
	}

	if err := validate.FormatOf("EndDateTime", "body", "date-time", m.EndDateTime.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *StatisticsAttributes) validateStartDateTime(formats strfmt.Registry) error {

	if err := validate.Required("StartDateTime", "body", m.StartDateTime); err != nil {
		return err
	}

	if err := validate.FormatOf("StartDateTime", "body", "date-time", m.StartDateTime.String(), formats); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *StatisticsAttributes) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *StatisticsAttributes) UnmarshalBinary(b []byte) error {
	var res StatisticsAttributes
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
